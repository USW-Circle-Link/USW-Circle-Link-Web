{"version":3,"file":"js/927.8180a951.js","mappings":"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","sources":["webpack://donggurami/./src/components/ClubLeader/PasserManagement.vue","webpack://donggurami/./src/components/ClubLeader/PasserManagement.vue?59e2"],"sourcesContent":["<template>\r\n  <div class=\"MainBox\">\r\n    <div class=\"header\">\r\n      <p class=\"common\">지원자 합격/불합격 처리</p>\r\n    </div>\r\n    <div class=\"status-actions\">\r\n      <button class=\"send-result-btn\" @click=\"showPopup\">지원 결과 전송</button>\r\n      <div class=\"status-boxes\">\r\n        <button class=\"status-box approve-box\" @click=\"setAllApplicantsStatus('PASS')\">전체<br>합격</button>\r\n        <button class=\"status-box reject-box\" @click=\"setAllApplicantsStatus('FAIL')\">전체<br>불합격</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"contents\">\r\n      <div class=\"applicant-list\">\r\n        <div class=\"applicant-item\" v-for=\"applicant in applicants\" :key=\"applicant.aplictUUID\">\r\n          <p>{{ applicant.userName }}</p>\r\n          <p>{{ applicant.studentNumber }}</p>\r\n          <p>{{ applicant.major }}</p>\r\n          <p>{{ applicant.userHp }}</p>\r\n          <div class=\"buttons-group\">\r\n            <label :class=\"{ checked: applicant.decision === 'PASS' }\" @click=\"toggleDecision(applicant, 'PASS')\">\r\n              <span class=\"check-icon\"></span>\r\n            </label>\r\n            <label :class=\"{ checked: applicant.decision === 'FAIL' }\" @click=\"toggleDecision(applicant, 'FAIL')\">\r\n              <span class=\"check-icon\"></span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"showConfirmPopup\" class=\"popup-overlay\">\r\n      <div class=\"popup\">\r\n        <!--<button class=\"close-btn\" @click=\"hidePopup\">X</button>-->\r\n        <h2>지원 결과 전송</h2>\r\n        <hr>\r\n        <p class=\"confirm-message\">합격/불합격 처리를 확정 하시겠습니까?</p>\r\n        <p class=\"notice-message\">확정 후 지원자에게 알림이 발송 되니 신중하게 선택해 주세요.</p>\r\n        <div class=\"popup-buttons\">\r\n          <button @click=\"hidePopup\">취소</button>\r\n          <button @click=\"confirmSendResults\">확정</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  <Popup401 v-if=\"show401Popup\" />\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'; // axios를 가져옵니다.\r\nimport store from '@/store/store'; // Vuex에서 상태 가져오기\r\nimport Popup401 from './401Popup.vue';\r\n\r\nexport default {\r\n  name: 'ApplicantManagement',\r\n  components: {\r\n    Popup401\r\n  },\r\n  data() {\r\n    return {\r\n      applicants: [],//지원자 목록 배열\r\n      showConfirmPopup: false,//합/불 확인 팝업 표시\r\n      notification: {\r\n        message: '',//사용자에게 표시 할 알림 메세지\r\n        type: '' // 알림 메시지 타입\r\n      },\r\n      fetchUrl: `${store.state.apiBaseUrl}/club-leader/${store.state.clubUUID}/applicants`, // 지원자 명단을 가져오는 서버 URL\r\n      submitUrl: `${store.state.apiBaseUrl}/club-leader/${store.state.clubUUID}/applicants/notifications`, // 합/불 결과를 보내는 서버 URL\r\n      show401Popup: false,\r\n    };\r\n  },\r\n  //지원자 명단 가져오기\r\n  mounted() {\r\n    this.fetchApplicants();\r\n  },\r\n  methods: {\r\n    // 401 에러 처리를 위한 공통 함수\r\n    handle401Error(error) {\r\n      if (error.response && error.response.status === 401) {\r\n        this.show401Popup = true;\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    // 지원자 목록을 서버에서 가져오는 메서드\r\n    async fetchApplicants() {\r\n      try {\r\n        const response = await fetch(this.fetchUrl, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${store.state.accessToken}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n\r\n        // 여기에 401 체크 추가\r\n        if (response.status === 401) {\r\n          this.show401Popup = true;\r\n          return;\r\n        }\r\n\r\n        if (response.ok) {\r\n          const result = await response.json();\r\n          console.log(':', result);\r\n\r\n          const data = result.data;\r\n          if (data && Array.isArray(data)) {\r\n            this.applicants = data.map(applicant => ({\r\n              aplictUUID: applicant.aplictUUID,\r\n              userName: applicant.userName,\r\n              studentNumber: applicant.studentNumber,\r\n              major: applicant.major,\r\n              userHp: applicant.userHp,\r\n              decision: null,\r\n            }));\r\n\r\n            this.showNotification('지원자 목록을 성공적으로 가져왔습니다.', 'success');\r\n          } else {\r\n            console.error('지원자 데이터 형식 오류', data);\r\n            this.showNotification('지원자 데이터를 처리하는 중 오류가 발생했습니다.', 'error');\r\n          }\r\n        } else {\r\n          console.error('지원자 데이터 가져오기 실패', response.statusText);\r\n          alert('지원자 데이터를 가져오는 데 실패했습니다.', 'error');\r\n        }\r\n      } catch (error) {\r\n        console.error('동아리 정보를 불러오는데 실패했습니다.', error);\r\n        alert('동아리 정보를 불러오는데 실패했습니다.');\r\n      }\r\n    },\r\n    //합/불 결과 전송 확인 팝업 표시\r\n    showPopup() {\r\n      this.showConfirmPopup = true;\r\n    },\r\n    ////합/불 결과 전송 확인 팝업 숨김\r\n    hidePopup() {\r\n      this.showConfirmPopup = false;\r\n    },\r\n    //결과 전송 확인 후 팝업을 숨기고 전송\r\n    confirmSendResults() {\r\n      this.hidePopup();\r\n      this.sendResults();\r\n    },\r\n    // 합/불 결과를 서버에 전송하기 전 데이터 검증 메서드\r\n    validateResults() {\r\n      const valid = this.applicants.every(applicant => applicant.decision !== null);\r\n      if (!valid) {\r\n        alert('모든 지원자에 대해 합/불 상태를 설정해 주세요.', 'error');\r\n      }\r\n      return valid;\r\n    },\r\n    // 합/불 결과를 서버에 전송하는 메서드\r\n    async sendResults() {\r\n      if (!this.validateResults()) {\r\n        return;\r\n      }\r\n      console.log('결과 전송 중...');\r\n      const results = this.applicants.map(applicant => ({\r\n        aplictUUID: applicant.aplictUUID,\r\n        aplictStatus: applicant.decision,\r\n      }));\r\n\r\n      try {\r\n        const response = await axios.post(this.submitUrl, results, {\r\n          headers: {\r\n            'Authorization': `Bearer ${store.state.accessToken}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n\r\n        this.showNotification('결과가 성공적으로 전송되었습니다.', 'success');\r\n        await this.fetchApplicants();\r\n        //window.location.reload();\r\n      } catch (error) {\r\n        if (error.response) {\r\n          // 401 체크 추가\r\n          if (error.response.status === 401) {\r\n            this.show401Popup = true;\r\n            return;\r\n          }\r\n\r\n          const errorData = error.response.data;\r\n          if (errorData.code === \"CMEM-202\") {\r\n            console.error('ClubMemberException 발생:', errorData.message);\r\n            alert('이미 동아리원으로 등록된 지원자가 있습니다. 관리자에게 문의하세요.', 'error');\r\n            //window.location.reload();\r\n          } else {\r\n            console.error('결과 전송 실패:', errorData.message || '서버 오류 발생');\r\n            alert(errorData.message || '결과 전송에 실패했습니다.', 'error');\r\n            //window.location.reload();\r\n          }\r\n        }\r\n      }\r\n    },\r\n    // 지원자의 합/불 상태를 토글하는 메서드\r\n    toggleDecision(applicant, decision) {\r\n      applicant.decision = decision; // null로 돌아가지 않도록 설정\r\n    },\r\n    // 전체 지원자의 합/불 상태를 설정하는 메서드\r\n    setAllApplicantsStatus(status) {\r\n      //모든 지원자의 합/불 상태를 일괄 설정\r\n      this.applicants.forEach(applicant => {\r\n        applicant.decision = status;\r\n      });\r\n    },\r\n    // 사용자에게 알림 메시지를 표시하는 메서드\r\n    showNotification(message, type) {\r\n      this.notification.message = message;\r\n      this.notification.type = type;\r\n      setTimeout(() => {\r\n        this.notification.message = '';\r\n      }, 3000); // 3초 후 알림 사라짐\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n\r\n/* ===== 전체 컨테이너 ===== */\r\n.MainBox {\r\n  width: 100%;\r\n  max-width: 1120px;\r\n  margin: 0 auto 30px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  padding: clamp(16px, 3vw, 32px); /* 화면 크기에 따라 패딩 조절 */\r\n  box-sizing: border-box;\r\n  --brand-color: #ffb052;\r\n  --approve-color: #7FB08C;\r\n  --approve-color-dark: #62956d;\r\n  --reject-color: #E57373;\r\n  --reject-color-dark: #cd5353;\r\n  --text-color: #000;\r\n  --light-text-color: #555;\r\n  --bg-color: #f7f7f7;\r\n  --border-color: #ddd;\r\n}\r\n\r\n/* ===== 헤더 ===== */\r\n.header {\r\n  margin-bottom: 24px;\r\n}\r\n.common {\r\n  color: var(--text-color);\r\n  margin: 0;\r\n  font-weight: 600;\r\n  font-size: clamp(20px, 2.2vw, 24px);\r\n}\r\n\r\n/* ===== 액션 영역 (버튼) ===== */\r\n.status-actions {\r\n  display: flex; /* Flexbox로 변경 */\r\n  flex-wrap: wrap; /* 화면이 작아지면 줄바꿈 */\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 16px;\r\n}\r\n.send-result-btn {\r\n  /* [수정] flex-grow를 이용해 유연한 너비 차지 */\r\n  flex-grow: 1;\r\n  min-width: 200px;\r\n  height: 48px;\r\n  border-radius: 8px;\r\n  border: 0;\r\n  background: #000;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  transition: background-color 0.2s;\r\n}\r\n.send-result-btn:hover { background-color: #333; }\r\n\r\n.status-boxes {\r\n  display: inline-flex;\r\n  gap: 8px;\r\n}\r\n.status-box {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 70px;\r\n  height: 42px;\r\n  border: 1px solid transparent;\r\n  border-radius: 8px;\r\n  font-size: 13px;\r\n  line-height: 1.2;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  color: #fff;\r\n  transition: background-color 0.2s;\r\n}\r\n.approve-box { background: var(--approve-color); }\r\n.approve-box:hover { background: var(--approve-color-dark); }\r\n.reject-box { background: var(--reject-color); }\r\n.reject-box:hover { background: var(--reject-color-dark); }\r\n\r\n/* ===== 본문/리스트 ===== */\r\n.contents {\r\n  margin-top: 24px;\r\n}\r\n.applicant-list {\r\n  display: grid;\r\n  gap: 12px;\r\n  max-height: 60vh;\r\n  overflow-y: auto;\r\n  padding-right: 4px; /* 스크롤바 공간 */\r\n}\r\n.applicant-item {\r\n  display: grid;\r\n  align-items: center;\r\n  gap: 12px;\r\n  background: var(--bg-color);\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n  /* 데스크톱 그리드 레이아웃 */\r\n  grid-template-columns: 1.2fr 1fr 1.4fr 1.1fr auto;\r\n}\r\n.applicant-item p {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  text-align: center;\r\n}\r\n/* 첫 번째 p 태그(이름)는 왼쪽 정렬 */\r\n.applicant-item p:first-child {\r\n  text-align: left;\r\n  font-weight: 500;\r\n}\r\n.buttons-group {\r\n  display: inline-flex;\r\n  gap: 8px;\r\n  justify-self: end;\r\n}\r\n.buttons-group label {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 55px;\r\n  height: 40px;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  background: #eee;\r\n  transition: background-color 0.2s;\r\n}\r\n.buttons-group label.checked { background: var(--approve-color); }\r\n.buttons-group label.checked:nth-of-type(2) { background: var(--reject-color); }\r\n.check-icon {\r\n  background: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"white\" d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg>') no-repeat center/16px 16px;\r\n  width: 16px;\r\n  height: 16px;\r\n}\r\n\r\n/* ===== 팝업 ===== */\r\n.popup-overlay {\r\n  position: fixed; inset: 0; background: rgba(0,0,0,0.6);\r\n  display: grid; place-items: center; z-index: 1000; padding: 16px;\r\n}\r\n.popup {\r\n  width: 100%; max-width: 480px; background: #fff;\r\n  padding: 24px; border-radius: 8px; box-shadow: 0 4px 20px rgba(0,0,0,0.15);\r\n}\r\n.popup h2 { margin: 0 0 16px; }\r\nhr { border: 0; border-top: 1px solid var(--border-color); margin: 16px 0; }\r\n.confirm-message { font-weight: 500; }\r\n.notice-message { font-size: 13px; color: var(--light-text-color); }\r\n.popup-buttons { display: flex; justify-content: flex-end; gap: 10px; margin-top: 24px; }\r\n.popup-buttons button {\r\n  min-width: 90px; height: 40px; border: 0; border-radius: 8px;\r\n  cursor: pointer; font-weight: 500; font-size: 14px;\r\n}\r\n.popup-buttons button:first-child { background: #B9B9B9; color: #fff; }\r\n.popup-buttons button:last-child { background: var(--brand-color); color: #fff; }\r\n\r\n/* ===== 반응형: 태블릿 (768px 이하) ===== */\r\n@media (max-width: 768px) {\r\n  .applicant-item {\r\n    grid-template-columns: 1fr 1fr; /* 2열 구조로 변경 */\r\n    row-gap: 12px;\r\n  }\r\n  /* Grid 레이아웃 재배치 (nth-of-type 사용) */\r\n  .applicant-item p:nth-of-type(1) { grid-column: 1 / -1; text-align: left; }\r\n  .applicant-item p:nth-of-type(2), .applicant-item p:nth-of-type(4) { text-align: left; }\r\n  .applicant-item p:nth-of-type(3) { text-align: right; }\r\n  .buttons-group { grid-column: 2 / 3; }\r\n}\r\n\r\n/* ===== 반응형: 모바일 (500px 이하) ===== */\r\n@media (max-width: 500px) {\r\n  .status-actions { flex-direction: column; align-items: stretch; }\r\n  .applicant-item {\r\n    grid-template-columns: 1fr; /* 1열 구조로 변경 */\r\n  }\r\n  /* Grid 레이아웃 재배치 (1열) */\r\n  .applicant-item p { grid-column: 1 / -1; text-align: left; }\r\n  .applicant-item p:nth-of-type(3) { text-align: left; }\r\n  .buttons-group { grid-column: 1 / -1; justify-self: stretch; }\r\n  .buttons-group label { flex-grow: 1; }\r\n}\r\n</style>","import { render } from \"./PasserManagement.vue?vue&type=template&id=4eb9949e&scoped=true\"\nimport script from \"./PasserManagement.vue?vue&type=script&lang=js\"\nexport * from \"./PasserManagement.vue?vue&type=script&lang=js\"\n\nimport \"./PasserManagement.vue?vue&type=style&index=0&id=4eb9949e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4eb9949e\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","showPopup","_hoisted_3","$event","setAllApplicantsStatus","_hoisted_4","_hoisted_5","_createElementBlock","_Fragment","_renderList","$data","applicants","applicant","key","aplictUUID","_toDisplayString","userName","studentNumber","major","userHp","_hoisted_6","_normalizeClass","checked","decision","toggleDecision","showConfirmPopup","_hoisted_9","_hoisted_10","_hoisted_11","hidePopup","confirmSendResults","show401Popup","_createBlock","_component_Popup401","name","components","Popup401","data","notification","message","type","fetchUrl","store","state","apiBaseUrl","clubUUID","submitUrl","mounted","this","fetchApplicants","methods","handle401Error","error","response","status","fetch","method","headers","accessToken","ok","result","json","console","log","Array","isArray","map","showNotification","statusText","alert","sendResults","validateResults","valid","every","results","aplictStatus","axios","post","errorData","code","forEach","setTimeout","__exports__","render"],"sourceRoot":""}