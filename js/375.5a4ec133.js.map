{"version":3,"file":"js/375.5a4ec133.js","mappings":"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","sources":["webpack://donggurami/./src/components/Admin/NoticeWrite.vue","webpack://donggurami/./src/components/Admin/NoticeWrite.vue?6bf9"],"sourcesContent":["<template>\r\n  <div class=\"notice-write-container\">\r\n    <h2 class=\"title\">공지사항 작성</h2>\r\n<p></p>\r\n    <!-- 401 에러 팝업 -->\r\n    <Popup401 v-if=\"show401Popup\" />\r\n\r\n    <div v-if=\"notice\">\r\n      <!-- 제목 입력 영역 -->\r\n<!-- 제목 입력 영역 -->\r\n<div class=\"title-container\" style=\"position: relative;\">\r\n\r\n  <label for=\"title-input\" class=\"label\">제목</label>\r\n\r\n  <input\r\n    id=\"title-input\"\r\n    v-model=\"notice.noticeTitle\"\r\n    @input=\"limitTitleLength\"\r\n    :class=\"{ 'input-error': notice.noticeTitle.length >= titleMaxLength }\"\r\n    class=\"title-input\"\r\n    placeholder=\"제목을 입력해 주세요. (200자 이내)\"\r\n  />\r\n\r\n  <div class=\"title-character-count\" :class=\"{ 'error-text': notice.noticeTitle.length >= titleMaxLength }\">\r\n  {{ notice.noticeTitle.length }} / {{ titleMaxLength }}\r\n</div>\r\n\r\n<span class=\"error-text\" v-show=\"titleError\">{{ titleError }}</span>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div v-if=\"showSuccessPopup\" class=\"popup-overlay\">\r\n  <div class=\"popup\">\r\n    <h2>동구라미</h2>\r\n    <hr />\r\n    <p class=\"confirm-message\">공지사항이 정상적으로 저장되었어요.</p>\r\n    <div class=\"popup-buttons\">\r\n      <button @click=\"closeSuccessPopup\">확인</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<div v-if=\"showUnexpectedErrorPopup\" class=\"popup-overlay\">\r\n      <div class=\"unexpectedPopup\">\r\n        <h2>동구라미</h2>\r\n        <hr />\r\n        <p class=\"confirm-message\">\r\n          <span class=\"error-highlight\">예기치 못한 오류</span>가 발생했습니다.<br>문제가 계속될 시, 관리자에게 문의해주세요.</p>\r\n        <div class=\"unexpectedPopup-buttons\">\r\n          <button @click=\"hideUnexpectedErrorPopup\">확인</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n      <!-- 내용 입력 영역 -->\r\n      <div class=\"content-container\">\r\n  <div class=\"textarea-wrapper\">\r\n    \r\n    <textarea\r\n  id=\"content-input\"\r\n  v-model=\"notice.noticeContent\"\r\n  @input=\"limitContentLength\"\r\n  :class=\"{ 'input-error': notice.noticeContent.length >= contentMaxLength }\"\r\n  class=\"content-input\"\r\n  placeholder=\"내용을 입력해 주세요. 사진은 5장까지 첨부 가능합니다.\"\r\n></textarea>\r\n<div class=\"character-count\" :class=\"{ 'error-text': notice.noticeContent.length >= contentMaxLength }\">\r\n  {{ notice.noticeContent.length }} / {{ contentMaxLength }}\r\n</div>\r\n\r\n    <span v-if=\"contentError\" class=\"error-text\">{{ contentError }}</span>\r\n  </div>\r\n</div>\r\n\r\n      <!-- 이미지 업로드 영역 -->\r\n      <div class=\"image-upload-container\">\r\n        <div\r\n          v-for=\"(image, index) in images\"\r\n          :key=\"index\"\r\n          class=\"image-preview\"\r\n        >\r\n          <img :src=\"image.src\" alt=\"Uploaded Image\" class=\"uploaded-image\" />\r\n          <div class=\"edit-icon\" @click=\"editImage(index)\">\r\n            <img src=\"@/assets/penbrush.png\" alt=\"Edit Icon\" />\r\n          </div>\r\n          <div class=\"delete-icon\" @click=\"deleteImage(index)\">\r\n            &times;\r\n          </div>\r\n          <input\r\n            type=\"file\"\r\n            :ref=\"'fileInput' + index\"\r\n            @change=\"onImageChange(index, $event)\"\r\n            style=\"display: none;\"\r\n          />\r\n        </div>\r\n\r\n        <!-- 최대 5장 제한 -->\r\n        <div v-if=\"images.length < 5\" class=\"image-upload\">\r\n          <input type=\"file\" @change=\"onImageUpload\" />\r\n          <div class=\"plus\" @click=\"$event.target.previousElementSibling.click()\">\r\n            +\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 완료 버튼 -->\r\n      <button class=\"submit-button\" @click=\"submitNotice\" :disabled=\"isLoading\">\r\n        완료\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport store from '@/store/store';\r\nimport Popup401 from \"@/components/Admin/401Popup.vue\";\r\n\r\nexport default {\r\n  name: 'NoticeWrite',\r\n  components: {\r\n    Popup401,\r\n  },\r\n  props: ['noticeUUID'],\r\n  data() {\r\n    return {\r\n      notice: {\r\n        noticeTitle: '',\r\n        noticeContent: ''\r\n      },\r\n      images: [],             // 이미지 파일 및 미리보기 저장\r\n      show401Popup: false,    // 401 에러 팝업\r\n      showSuccessPopup: false, // 공지사항 작성 성공 팝업\r\n      isLoading: false,       // 로딩 상태 (필요 시 사용)\r\n      titleError: '', // 제목 오류 메시지\r\n      contentError: '', // 내용 오류 메시지\r\n      titleMaxLength: 200, // 제목 최대 글자 수\r\n      contentMaxLength: 3000, // 내용 최대 글자 수\r\n      showUnexpectedErrorPopup: false\r\n    };\r\n  },\r\n  methods: {\r\n    // 글자수 제한\r\n    limitTitleLength() {\r\n    if (this.notice.noticeTitle.length > this.titleMaxLength) {\r\n      this.notice.noticeTitle = this.notice.noticeTitle.slice(0, this.titleMaxLength);\r\n    }\r\n  },\r\n  limitContentLength() {\r\n    if (this.notice.noticeContent.length > this.contentMaxLength) {\r\n      this.notice.noticeContent = this.notice.noticeContent.slice(0, this.contentMaxLength);\r\n    }\r\n  },\r\n\r\n    // 성공 팝업 닫기\r\n    closeSuccessPopup() {\r\n      this.showSuccessPopup = false;\r\n      // 팝업 닫은 후 공지사항 목록 페이지로 이동\r\n      this.$router.push({ name: 'Notice' });\r\n    },\r\n\r\n    // 이미지 삭제\r\n    deleteImage(index) {\r\n      this.images.splice(index, 1);\r\n      this.$refs[`fileInput${index}`] = null; // 파일 입력 필드 초기화\r\n    },\r\n\r\n    // 예기치 못한 오류 팝업 숨기기\r\n    hideUnexpectedErrorPopup() {\r\n      this.showUnexpectedErrorPopup = false;\r\n    },\r\n\r\n    // 401 에러 공통 처리\r\n    handle401Error(error) {\r\n      if (error.response && error.response.status === 401) {\r\n        this.show401Popup = true;\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    // 이미지 업로드\r\n    onImageUpload(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const validExtensions = ['png', 'jpg', 'jpeg'];\r\n        const fileExtension = file.name.split('.').pop().toLowerCase();\r\n        const maxFileSize = 10 * 1024 * 1024;\r\n\r\n        if (validExtensions.includes(fileExtension) && file.size <= maxFileSize) {\r\n          const reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            this.images.push({ src: e.target.result, file });\r\n            // 파일 입력 필드 초기화 (같은 파일 다시 업로드 가능)\r\n            event.target.value = \"\";\r\n          };\r\n          reader.readAsDataURL(file);\r\n        } else {\r\n          alert('파일 형식이 맞지 않거나 크기가 초과되었습니다. (10MB 이하, png/jpg만 허용)');\r\n        }\r\n      }\r\n    },\r\n\r\n    // 이미지 수정 아이콘 클릭\r\n    editImage(index) {\r\n      this.$refs[`fileInput${index}`][0].click();\r\n    },\r\n\r\n    // 이미지 수정 실제 처리\r\n    onImageChange(index, event) {\r\n      if (!event || !event.target || !event.target.files) {\r\n        console.error('Invalid event object:', event);\r\n        return;\r\n      }\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n\r\n      const validExtensions = ['png', 'jpg', 'jpeg', 'gif', 'bmp', 'webp', 'tiff'];\r\n      const fileExtension = file.name.split('.').pop().toLowerCase();\r\n      const maxFileSize = 10 * 1024 * 1024;\r\n\r\n      if (validExtensions.includes(fileExtension) && file.size <= maxFileSize) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          this.images[index] = {\r\n            ...this.images[index],\r\n            src: e.target.result,\r\n            file\r\n          };\r\n        };\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        alert('파일 형식이 맞지 않거나 크기가 초과되었습니다. (10MB 이하, png/jpg만 허용)');\r\n      }\r\n    },\r\n\r\n    // 공지사항 제출\r\n    async submitNotice() {\r\n     // const maxTitleLength = 200;\r\n      //const maxContentLength = 3000;\r\n\r\n      // 🔹 제목과 내용 입력 여부 확인 후 오류 메시지 설정\r\n    if (this.notice.noticeTitle.trim() === \"\") {\r\n        this.titleError = \"* 제목을 입력해주세요.\";\r\n      } else {\r\n        this.titleError = \"\";\r\n      }\r\n\r\n      if (this.notice.noticeContent.trim() === \"\") {\r\n        this.contentError = \"* 내용을 입력해주세요.\";\r\n      } else {\r\n        this.contentError = \"\";\r\n      }\r\n\r\n\r\n      try {\r\n        this.isLoading = true;\r\n\r\n        // 전송할 데이터 구성\r\n        const form = new FormData();\r\n        const noticeData = {\r\n          noticeTitle: this.notice.noticeTitle,\r\n          // 공백과 줄바꿈 처리\r\n          noticeContent: this.notice.noticeContent\r\n            .replace(/ /g, '&nbsp;')\r\n            .replace(/\\n/g, '<br>'),\r\n          photoOrders: this.images.length > 0\r\n            ? this.images.map((_, index) => index + 1)\r\n            : [],\r\n        };\r\n\r\n        // request JSON 부분\r\n        form.append(\r\n          'request',\r\n          new Blob([JSON.stringify(noticeData)], { type: 'application/json' })\r\n        );\r\n\r\n        // 사진(파일)들 추가\r\n        if (this.images.length > 0) {\r\n          this.images.forEach((image) => {\r\n            form.append('photos', image.file);\r\n          });\r\n        }\r\n\r\n        // API 요청\r\n        const response = await axios.post(\r\n          `${store.state.apiBaseUrl}/notices`,\r\n          form,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${store.state.accessToken}`,\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          }\r\n        );\r\n\r\n        // 정상 등록 시\r\n        if (response.status === 200) {\r\n          \r\n          // 팝업 표시\r\n          this.showSuccessPopup = true;\r\n        }\r\n\r\n        if (!response || !response.data) {\r\n          console.error('응답 데이터 없음');\r\n        //  alert('공지사항 제출에 실패했습니다. 다시 시도해주세요.');\r\n          return;\r\n        }\r\n\r\n        // 서버 응답 상태 코드 확인\r\n        if ([401].includes(response.status)) {\r\n          let message = '';\r\n\r\n          if (response.status === 401) {\r\n            message = '인증되지 않은 사용자입니다. 다시 로그인해주세요.';\r\n            this.$router.push({ name: 'Login' });\r\n          }\r\n          alert(message);\r\n          return;\r\n        }\r\n\r\n        // presignedUrls 존재 시, 실제 S3 업로드\r\n        const presignedUrls = response?.data?.data || [];\r\n        if (Array.isArray(presignedUrls) && presignedUrls.length > 0) {\r\n          await Promise.all(\r\n            presignedUrls.map(async (url, index) => {\r\n              const file = this.images[index].file;\r\n              await axios.put(url, file, {\r\n                headers: { 'Content-Type': file.type },\r\n              });\r\n            })\r\n          );\r\n        }\r\n\r\n        // (여기서 팝업 띄우는 로직이 이미 위에서 처리됨)\r\n        // 또는, 바로 이동시키고 싶다면 아래처럼 작성:\r\n        // this.showSuccessPopup = true; // -> 팝업 표시\r\n        // this.$router.push({ name: 'Notice' }); // -> 곧바로 이동\r\n\r\n      } catch (error) {\r\n        // 401 에러 처리\r\n        if (error.response && error.response.status === 401) {\r\n          this.show401Popup = true;\r\n          return;\r\n        }\r\n\r\n        // 400 에러(유효성 실패 등)\r\n        // if (error.response && error.response.status === 400) {\r\n        //   const additionalData = error.response.data.additionalData;\r\n        //   if (additionalData.noticeTitle) {\r\n        //    // alert(additionalData.noticeTitle);\r\n        //   }\r\n        //   if (additionalData.noticeContent) {\r\n        //     //alert(additionalData.noticeContent);\r\n        //   }\r\n        //   return;\r\n        // }\r\n\r\n        const errorCode = error?.response?.data?.code;\r\n\r\n        if (errorCode === 'MAX_UPLOAD_SIZE_EXCEEDED') {\r\n          alert(error.response.data.message);\r\n          return;\r\n        }\r\n\r\n        if (errorCode === 'INVALID_TITLE_OR_CONTENT') {\r\n          const additionalData = error.response.data.additionalData || {};\r\n          if (additionalData.noticeTitle) {\r\n            this.titleError = additionalData.noticeTitle;\r\n          }\r\n          if (additionalData.noticeContent) {\r\n            this.contentError = additionalData.noticeContent;\r\n          }\r\n          return;\r\n        }\r\n\r\n\r\n        // 기타 에러\r\n        console.error('공지사항 제출 실패:', error.response || error.message);\r\n      //  alert('공지사항 제출에 실패했습니다. 다시 시도해주세요.');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 전체 컨테이너 */\r\n.notice-write-container {\r\n  width: 100%;\r\n  min-width: 390px;\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  overflow-x: hidden;\r\n}\r\n\r\n/* 초과 시 테두리 빨갛게 */\r\n.input-error {\r\n  border: 1px solid red !important;\r\n}\r\n\r\n/* 초과 시 글자 수 빨갛게 */\r\n.error-text {\r\n  color: red !important;\r\n  font-size: 14px;\r\n  \r\n  margin-top: 5px;\r\n}\r\n\r\n\r\n\r\n/* 페이지 제목 */\r\n.title {\r\n  color: #000000;\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n  margin-bottom: 0px;\r\n  margin-top: -20px;\r\n  position: relative;\r\n  display: inline-block;\r\n  z-index: 1;\r\n}\r\n.title::after {\r\n  content: '';\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 2px;\r\n  width: 102.5%;\r\n  z-index: -1;\r\n  transform: skew(-12deg);\r\n}\r\n\r\n/* 라벨 스타일 */\r\n.label {\r\n  font-size: 18px;\r\n  color: #000000;\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  /* font-weight: bold; */\r\n}\r\n\r\n/* 제목 입력창 */\r\n.title-input {\r\n  margin-top: 10px;\r\n  width: 95%;\r\n  padding: 10px;\r\n  font-size: clamp(14px, 2.5vw, 16px);\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n/* 내용 입력창 영역 */\r\n.content-container {\r\n  margin-top: 25px;\r\n}\r\n\r\n.textarea-wrapper {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 100%;\r\n}\r\n\r\n.content-input {\r\n  width: 95%;\r\n  height: 382px;\r\n  padding: 10px;\r\n  font-size: clamp(14px, 2.5vw, 16px);\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  resize: none;\r\n  position: relative;\r\n}\r\n\r\n.title-container {\r\n  position: relative;\r\n  min-height: 85px; /* error-text 높이 고려한 값 */\r\n}\r\n\r\n.character-count {\r\n  position: absolute;\r\n  bottom: 10px; \r\n  right: -10px;\r\n  font-size: 12px;\r\n  color: black;\r\n  pointer-events: none;\r\n  transition: right 0.3s ease;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .character-count {\r\n    right: 0px;\r\n  }\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .character-count {\r\n    right: 3px;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .character-count {\r\n    right: 7px;\r\n  }\r\n}\r\n\r\n@media (max-width: 390px) {\r\n  .character-count {\r\n    right: 12px;\r\n  }\r\n}\r\n\r\n.title-character-count {\r\n  position: absolute;\r\n  top: 52px;\r\n  right: -5px;\r\n  font-size: 12px;\r\n  color: black;\r\n  pointer-events: none;\r\n  transition: right 0.3s ease;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .title-character-count {\r\n    right: 0px;\r\n  }\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .title-character-count {\r\n    right: 2px;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .title-character-count {\r\n    right: 5px;\r\n  }\r\n}\r\n\r\n@media (max-width: 390px) {\r\n  .title-character-count {\r\n    right: 10px;\r\n  }\r\n}\r\n\r\n\r\n/* 포커스 시 검정 테두리 제거 */\r\ninput:focus,\r\ntextarea:focus {\r\n  outline: none;\r\n  border: 1px solid #ddd; /* 기존 그대로 유지 */\r\n  box-shadow: none;\r\n  transform: none;\r\n}\r\n\r\ninput,\r\ntextarea {\r\n  transition: none !important;\r\n  transform: none !important;\r\n}\r\n\r\n\r\n/* 이미지 업로드 영역 */\r\n.image-upload-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  width: 100%;\r\n  height: 153.96px;\r\n  background-color: white;\r\n  padding: 10px;\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 5px;\r\n  margin-top: 25px;\r\n}\r\n.image-preview {\r\n  position: relative;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  width: 142px;\r\n  height: 95.88px;\r\n  flex: 0 0 auto;\r\n  background-color: #ECECEC;\r\n  margin-left: 7px;\r\n}\r\n.uploaded-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  background: #ECECEC;\r\n}\r\n.edit-icon {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 30px;\r\n  height: 30px;\r\n  filter: invert(100%);\r\n  cursor: pointer;\r\n}\r\n.edit-icon img {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.delete-icon {\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 0px;\r\n  font-size: 24px;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  line-height: 30px;\r\n}\r\n\r\n/* + 버튼 */\r\n.image-upload {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 138px;\r\n  height: 92px;\r\n  border: 2px solid #ddd;\r\n  background: #ececec;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  flex: 0 0 auto;\r\n  margin-left: 7px;\r\n}\r\n.image-upload input {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n}\r\n.plus {\r\n  position: absolute;\r\n  display: flex;\r\n  background: hsla(0,0%,100%,.7);\r\n  border-radius: 50%;\r\n  width: 25px;\r\n  height: 25px;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  color: #696969;\r\n  border: 2px solid #ddd;\r\n  box-shadow: 0 0 1px rgba(0,0,0,.1);\r\n  align-items: center;\r\n}\r\n\r\n/* 완료 버튼 */\r\n.submit-button {\r\n  display: block;\r\n  width: 102.5px;\r\n  height: 45px;\r\n  padding: 10px;\r\n  margin: 20px 0 20px auto;\r\n  background-color: #FFB052;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: white;\r\n  cursor: pointer;\r\n  text-align: center;\r\n}\r\n\r\n.popup {\r\n  position: fixed; /* 고정 위치 */\r\n  top: 50%;         /* 수직 중앙 */\r\n  left: 50%;        /* 수평 중앙 */\r\n  transform: translate(-50%, -50%); /* 정확한 중앙 배치 */\r\n  \r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  width: 500px;\r\n  height: 180px;\r\n  z-index: 1001; /* overlay보다 높게 */\r\n}\r\n\r\n.popup h2 {\r\n  margin-top: 0;\r\n  text-align: left;\r\n  font-size: 16px; /* 👈 여기서 줄이세요 (기존 24px → 18px 추천) */\r\n  font-weight: 500; /* 굵기도 조절 가능 */\r\n}\r\n\r\nhr {\r\n  border: none;\r\n  border-top: 1px solid #ccc;\r\n  margin: 10px 0;\r\n}\r\n.confirm-message {\r\n  text-align: left;\r\n}\r\n.popup-buttons {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 40px;\r\n}\r\n.popup-buttons button {\r\n  width: 80px;\r\n  height: 32px;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  margin-left: 10px;\r\n  background: #ffb052;\r\n  color: white;\r\n}\r\n\r\n\r\n/* 팝업 전체 화면 덮는 반투명 배경 */\r\n.popup-overlay {\r\n  position: fixed;\r\n  top: 0; \r\n  left: 0;\r\n  width: 100%; \r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 9999;\r\n}\r\n\r\n/* 팝업 박스: 452x182 고정 크기, 중앙 정렬 */\r\n.write-popup {\r\n  position: absolute;\r\n  width: 452px;\r\n  height: 182px;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  \r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 10px rgba(0,0,0,0.2);\r\n  box-sizing: border-box;\r\n  padding: 20px; /* 내부 여백 */\r\n  \r\n  display: flex;\r\n  flex-direction: column; /* 위->아래로 배치 */\r\n}\r\n\r\n/* 제목: 왼쪽 정렬, 폰트 크기/두께 조정 */\r\n.popup-title {\r\n  margin: 0;\r\n  font-size: 16px; /* 필요 시 조정 */\r\n  font-weight: 700;\r\n  text-align: left;\r\n  color: #333;\r\n}\r\n\r\n/* 구분선 */\r\n.popup-divider {\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: #ECECEC; /* 연한 회색 */\r\n  margin: 8px 0;\r\n}\r\n\r\n/* 메시지: 왼쪽 정렬 */\r\n.popup-message {\r\n  margin: 0;\r\n  margin-bottom: 20px;\r\n  font-size: 14px;\r\n  text-align: left;\r\n  color: #666;\r\n  line-height: 1.4;\r\n  /* flex: 1;  // 필요한 경우 버튼을 하단으로 밀고 싶으면 사용 */\r\n}\r\n\r\n/* 버튼 컨테이너: 오른쪽 정렬 */\r\n.popup-buttons {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n/* [확인] 버튼 */\r\n.confirm-button {\r\n  background-color: #FFB052;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  width: 60px;\r\n  height: 32px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n}\r\n.popup-message {\r\n  margin: 20px 0 20px; /* 상단 마진 추가: margin-top: 20px */\r\n  font-size: 14px;\r\n  text-align: left;\r\n  color: black;\r\n  line-height: 1.4;\r\n}\r\n\r\n</style>\r\n","import { render } from \"./NoticeWrite.vue?vue&type=template&id=642edb6b&scoped=true\"\nimport script from \"./NoticeWrite.vue?vue&type=script&lang=js\"\nexport * from \"./NoticeWrite.vue?vue&type=script&lang=js\"\n\nimport \"./NoticeWrite.vue?vue&type=style&index=0&id=642edb6b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-642edb6b\"]])\n\nexport default __exports__"],"names":["class","style","_createElementBlock","_hoisted_1","_createElementVNode","$data","show401Popup","_createBlock","_component_Popup401","key","notice","_hoisted_2","_hoisted_3","for","id","noticeTitle","$event","onInput","_cache","args","$options","limitTitleLength","_normalizeClass","length","titleMaxLength","placeholder","_toDisplayString","titleError","showSuccessPopup","_hoisted_4","_hoisted_5","_hoisted_6","onClick","closeSuccessPopup","showUnexpectedErrorPopup","_hoisted_7","_hoisted_8","_hoisted_9","hideUnexpectedErrorPopup","_hoisted_10","_hoisted_11","noticeContent","limitContentLength","contentMaxLength","contentError","_hoisted_12","_hoisted_13","_Fragment","_renderList","images","image","index","src","alt","editImage","_imports_0","deleteImage","_hoisted_16","type","ref","onChange","onImageChange","_hoisted_18","onImageUpload","target","previousElementSibling","click","submitNotice","disabled","isLoading","_hoisted_19","name","components","Popup401","props","data","methods","this","slice","$router","push","splice","$refs","handle401Error","error","response","status","event","file","files","validExtensions","fileExtension","split","pop","toLowerCase","maxFileSize","includes","size","reader","FileReader","onload","e","result","value","readAsDataURL","alert","console","trim","form","FormData","noticeData","replace","photoOrders","map","_","append","Blob","JSON","stringify","forEach","axios","post","store","state","apiBaseUrl","headers","Authorization","accessToken","message","presignedUrls","Array","isArray","Promise","all","async","url","put","errorCode","code","additionalData","__exports__","render"],"sourceRoot":""}