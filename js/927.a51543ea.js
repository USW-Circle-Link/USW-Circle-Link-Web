"use strict";(self["webpackChunkdonggurami"]=self["webpackChunkdonggurami"]||[]).push([[927],{7927:function(s,t,e){e.r(t),e.d(t,{default:function(){return w}});var o=e(6768),a=e(4232);const i={class:"MainBox"},n={class:"status-actions"},l={class:"status-boxes"},c={class:"contents"},p={class:"applicant-list"},r={class:"buttons-group"},u=["onClick"],h=["onClick"],d={key:0,class:"popup-overlay"},k={class:"popup"},m={class:"popup-buttons"};function f(s,t,e,f,L,b){const A=(0,o.g2)("Popup401");return(0,o.uX)(),(0,o.CE)(o.FK,null,[(0,o.Lk)("div",i,[t[13]||(t[13]=(0,o.Lk)("div",{class:"header"},[(0,o.Lk)("p",{class:"common"},"지원자 합격/불합격 처리")],-1)),(0,o.Lk)("div",n,[(0,o.Lk)("button",{class:"send-result-btn",onClick:t[0]||(t[0]=(...s)=>b.showPopup&&b.showPopup(...s))},"지원 결과 전송"),(0,o.Lk)("div",l,[(0,o.Lk)("button",{class:"status-box approve-box",onClick:t[1]||(t[1]=s=>b.setAllApplicantsStatus("PASS"))},t[5]||(t[5]=[(0,o.eW)("전체"),(0,o.Lk)("br",null,null,-1),(0,o.eW)("합격")])),(0,o.Lk)("button",{class:"status-box reject-box",onClick:t[2]||(t[2]=s=>b.setAllApplicantsStatus("FAIL"))},t[6]||(t[6]=[(0,o.eW)("전체"),(0,o.Lk)("br",null,null,-1),(0,o.eW)("불합격")]))])]),(0,o.Lk)("div",c,[(0,o.Lk)("div",p,[((0,o.uX)(!0),(0,o.CE)(o.FK,null,(0,o.pI)(L.applicants,s=>((0,o.uX)(),(0,o.CE)("div",{class:"applicant-item",key:s.aplictUUID},[(0,o.Lk)("p",null,(0,a.v_)(s.userName),1),(0,o.Lk)("p",null,(0,a.v_)(s.studentNumber),1),(0,o.Lk)("p",null,(0,a.v_)(s.major),1),(0,o.Lk)("p",null,(0,a.v_)(s.userHp),1),(0,o.Lk)("div",r,[(0,o.Lk)("label",{class:(0,a.C4)({checked:"PASS"===s.decision}),onClick:t=>b.toggleDecision(s,"PASS")},t[7]||(t[7]=[(0,o.Lk)("span",{class:"check-icon"},null,-1)]),10,u),(0,o.Lk)("label",{class:(0,a.C4)({checked:"FAIL"===s.decision}),onClick:t=>b.toggleDecision(s,"FAIL")},t[8]||(t[8]=[(0,o.Lk)("span",{class:"check-icon"},null,-1)]),10,h)])]))),128))])]),L.showConfirmPopup?((0,o.uX)(),(0,o.CE)("div",d,[(0,o.Lk)("div",k,[t[9]||(t[9]=(0,o.Lk)("h2",null,"지원 결과 전송",-1)),t[10]||(t[10]=(0,o.Lk)("hr",null,null,-1)),t[11]||(t[11]=(0,o.Lk)("p",{class:"confirm-message"},"합격/불합격 처리를 확정 하시겠습니까?",-1)),t[12]||(t[12]=(0,o.Lk)("p",{class:"notice-message"},"확정 후 지원자에게 알림이 발송 되니 신중하게 선택해 주세요.",-1)),(0,o.Lk)("div",m,[(0,o.Lk)("button",{onClick:t[3]||(t[3]=(...s)=>b.hidePopup&&b.hidePopup(...s))},"취소"),(0,o.Lk)("button",{onClick:t[4]||(t[4]=(...s)=>b.confirmSendResults&&b.confirmSendResults(...s))},"확정")])])])):(0,o.Q3)("",!0)]),L.show401Popup?((0,o.uX)(),(0,o.Wv)(A,{key:0})):(0,o.Q3)("",!0)],64)}var L=e(4373),b=e(5968),A=e(1720),v={name:"ApplicantManagement",components:{Popup401:A.A},data(){return{applicants:[],showConfirmPopup:!1,notification:{message:"",type:""},fetchUrl:`${b.A.state.apiBaseUrl}/club-leader/${b.A.state.clubUUID}/applicants`,submitUrl:`${b.A.state.apiBaseUrl}/club-leader/${b.A.state.clubUUID}/applicants/notifications`,show401Popup:!1}},mounted(){this.fetchApplicants()},methods:{handle401Error(s){return!(!s.response||401!==s.response.status)&&(this.show401Popup=!0,!0)},async fetchApplicants(){try{const s=await fetch(this.fetchUrl,{method:"GET",headers:{Authorization:`Bearer ${b.A.state.accessToken}`,"Content-Type":"application/json"}});if(401===s.status)return void(this.show401Popup=!0);if(s.ok){const t=await s.json();console.log(":",t);const e=t.data;e&&Array.isArray(e)?(this.applicants=e.map(s=>({aplictUUID:s.aplictUUID,userName:s.userName,studentNumber:s.studentNumber,major:s.major,userHp:s.userHp,decision:null})),this.showNotification("지원자 목록을 성공적으로 가져왔습니다.","success")):(console.error("지원자 데이터 형식 오류",e),this.showNotification("지원자 데이터를 처리하는 중 오류가 발생했습니다.","error"))}else console.error("지원자 데이터 가져오기 실패",s.statusText),alert("지원자 데이터를 가져오는 데 실패했습니다.","error")}catch(s){console.error("동아리 정보를 불러오는데 실패했습니다.",s),alert("동아리 정보를 불러오는데 실패했습니다.")}},showPopup(){this.showConfirmPopup=!0},hidePopup(){this.showConfirmPopup=!1},confirmSendResults(){this.hidePopup(),this.sendResults()},validateResults(){const s=this.applicants.every(s=>null!==s.decision);return s||alert("모든 지원자에 대해 합/불 상태를 설정해 주세요.","error"),s},async sendResults(){if(!this.validateResults())return;console.log("결과 전송 중...");const s=this.applicants.map(s=>({aplictUUID:s.aplictUUID,aplictStatus:s.decision}));try{await L.A.post(this.submitUrl,s,{headers:{Authorization:`Bearer ${b.A.state.accessToken}`,"Content-Type":"application/json"}});this.showNotification("결과가 성공적으로 전송되었습니다.","success"),await this.fetchApplicants()}catch(t){if(t.response){if(401===t.response.status)return void(this.show401Popup=!0);const s=t.response.data;"CMEM-202"===s.code?(console.error("ClubMemberException 발생:",s.message),alert("이미 동아리원으로 등록된 지원자가 있습니다. 관리자에게 문의하세요.","error")):(console.error("결과 전송 실패:",s.message||"서버 오류 발생"),alert(s.message||"결과 전송에 실패했습니다.","error"))}}},toggleDecision(s,t){s.decision=t},setAllApplicantsStatus(s){this.applicants.forEach(t=>{t.decision=s})},showNotification(s,t){this.notification.message=s,this.notification.type=t,setTimeout(()=>{this.notification.message=""},3e3)}}},C=e(1241);const g=(0,C.A)(v,[["render",f],["__scopeId","data-v-4eb9949e"]]);var w=g}}]);
//# sourceMappingURL=927.a51543ea.js.map