{"version":3,"file":"js/739.d91da486.js","mappings":"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","sources":["webpack://donggurami/./src/components/ClubLeader/NoticeClick.vue","webpack://donggurami/./src/components/ClubLeader/NoticeClick.vue?14b6"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"header\">\r\n      <button class=\"nav-button\" @click=\"prevNotice\">\r\n        <img src=\"@/assets/left.png\" alt=\"Previous\" class=\"nav-icon\" />\r\n        이전 공지\r\n      </button>\r\n      <button class=\"nav-button\" @click=\"nextNotice\">\r\n        다음 공지\r\n        <img src=\"@/assets/rigth.png\" alt=\"Next\" class=\"nav-icon\" />\r\n      </button>\r\n    </div>\r\n\r\n    <div v-if=\"notice\" class=\"notice-details\">\r\n      <div class=\"meta-info\">\r\n        <h1 class=\"notice-title\">{{ notice.noticeTitle }}</h1>\r\n        <div class=\"meta-line\">\r\n          <span class=\"notice-meta\">{{ notice.adminName }}</span>\r\n          <span class=\"notice-date\"> {{ formattedDate(notice.noticeCreatedAt) }} </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"notice-content\" v-html=\"convertNewlinesToBr(notice.noticeContent)\"></div>\r\n      <div class=\"notice-images\" v-if=\"images.length > 0\">\r\n        <div v-for=\"(image, index) in images\" :key=\"index\" class=\"image-container\">\r\n          <img\r\n            :src=\"image.src\"\r\n            alt=\"Notice Image\"\r\n            class=\"notice-image\"\r\n            @error=\"handleImageError(index)\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"notice-list\">\r\n      <table>\r\n        <tbody>\r\n        <tr v-for=\"n in notices\" :key=\"n.noticeUUID\" @click=\"goToNotice(n.noticeUUID)\" :class=\"{ 'current-notice': notice && n.noticeUUID === notice.noticeUUID }\">\r\n          <td class=\"title-col\">\r\n              {{ n.noticeTitle }}\r\n          </td>\r\n          <td class=\"author-col\">{{ n.adminName }}</td>\r\n          <td class=\"date-col\">{{ formattedDate(n.noticeCreatedAt) }}</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n      \r\n      <div class=\"notice-cards\">\r\n        <div v-for=\"n in notices\" :key=\"n.noticeUUID\" class=\"notice-card\" @click=\"goToNotice(n.noticeUUID)\" :class=\"{ 'current-notice': notice && n.noticeUUID === notice.noticeUUID }\">\r\n          <div class=\"card-title\">{{ n.noticeTitle }}</div>\r\n          <div class=\"card-meta\">\r\n            <span class=\"card-author\">{{ n.adminName }}</span>\r\n            <span class=\"card-date\">{{ formattedDate(n.noticeCreatedAt) }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div class=\"pagination\">\r\n        <button @click=\"changePage(currentPage - 1)\" :disabled=\"currentPage === 1\" class=\"pagination-button\">\r\n          <img src=\"@/assets/left.png\" alt=\"Previous\" class=\"pagination-icon\" />\r\n        </button>\r\n        <span\r\n            v-for=\"page in totalPages\"\r\n            :key=\"page\"\r\n            @click=\"changePage(page)\"\r\n            :class=\"{ active: page === currentPage }\"\r\n            class=\"pagination-number\"\r\n        >\r\n          {{ page }}\r\n        </span>\r\n        <button @click=\"changePage(currentPage + 1)\" :disabled=\"currentPage === totalPages\" class=\"pagination-button\">\r\n          <img src=\"@/assets/rigth.png\" alt=\"Next\" class=\"pagination-icon\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Popup401 v-if=\"show401Popup\" />\r\n</template>\r\n\r\n<script>\r\n// 스크립트 부분은 변경사항이 없으므로 기존 코드를 그대로 사용하시면 됩니다.\r\nimport store from '@/store/store';\r\nimport axios from 'axios';\r\nimport Popup401 from \"@/components/Admin/401Popup.vue\";\r\n\r\nexport default {\r\n  components: { Popup401 },\r\n  data() {\r\n    return {\r\n      notices: [], // 공지사항 목록\r\n      notice: null, // 현재 선택된 공지사항\r\n      currentPage: 1, // 현재 페이지 번호\r\n      totalPages: 1, // 전체 페이지 수\r\n      itemsPerPage: 5, // 페이지당 항목 수\r\n      images: [], // 이미지 배열\r\n      show401Popup: false, // 401 팝업\r\n      totalNotices: 1, // 전체 공지사항 수\r\n      currentNoticeIndex: 0 // 현재 공지사항의 전체 인덱스\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchNotices();\r\n    this.fetchNotice(this.$route.params.noticeUUID);\r\n  },\r\n  mounted() {\r\n    this.initializePage();\r\n  },\r\n  methods: {\r\n    initializePage() {\r\n      const isFirstVisit = localStorage.getItem(\"firstVisit\") === null;\r\n      const reloaded = sessionStorage.getItem(\"reloaded\");\r\n\r\n      if (isFirstVisit) {\r\n        localStorage.setItem(\"firstVisit\", \"true\");\r\n        sessionStorage.setItem(\"reloaded\", \"true\");\r\n        window.location.reload();\r\n      } else if (!reloaded) {\r\n        sessionStorage.setItem(\"reloaded\", \"true\");\r\n        window.location.reload();\r\n      } else {\r\n        sessionStorage.removeItem(\"reloaded\");\r\n      }\r\n    },\r\n    handle401Error(error) {\r\n      if (error.response && error.response.status === 401) {\r\n        this.show401Popup = true;\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    convertNewlinesToBr(text) {\r\n      return text ? text.replace(/\\n/g, '<br>') : '';\r\n    },\r\n    async fetchNotices() {\r\n      try {\r\n        const accessToken = store.state.accessToken;\r\n        const page = Math.max(this.currentPage - 1, 0);\r\n        const size = this.itemsPerPage;\r\n\r\n        const response = await axios.get(\r\n            `${store.state.apiBaseUrl}/notices?page=${page}&size=${size}`,\r\n            {\r\n              headers: { Authorization: `Bearer ${accessToken}` },\r\n            }\r\n        );\r\n\r\n        if (response.data.data && response.data.data.content) {\r\n          this.notices = response.data.data.content;\r\n          this.totalPages = response.data.data.totalPages || 1;\r\n          this.totalNotices = response.data.data.totalElements || 1;\r\n        } else {\r\n          this.notices = [];\r\n        }\r\n      } catch (error) {\r\n        if (!this.handle401Error(error)) {\r\n          // alert(\"공지사항 목록을 불러오는 데 실패했습니다.\");\r\n        }\r\n      }\r\n    },\r\n    async fetchNotice(noticeUUID) {\r\n      try {\r\n        const response = await axios.get(`${store.state.apiBaseUrl}/notices/${noticeUUID}`, {\r\n          headers: { Authorization: `Bearer ${store.state.accessToken}` },\r\n        });\r\n\r\n        if (response.data && response.data.data) {\r\n          this.notice = response.data.data;\r\n\r\n          const allNoticesResponse = await axios.get(\r\n              `${store.state.apiBaseUrl}/notices?page=0&size=${this.totalNotices || 999}`, // totalNotices가 0일 경우 대비\r\n              {\r\n                headers: { Authorization: `Bearer ${store.state.accessToken}` },\r\n              }\r\n          );\r\n\r\n          if(allNoticesResponse.data.data.content) {\r\n            const allNotices = allNoticesResponse.data.data.content;\r\n            this.currentNoticeIndex = allNotices.findIndex(n => n.noticeUUID === noticeUUID);\r\n\r\n            const newPage = Math.floor(this.currentNoticeIndex / this.itemsPerPage) + 1;\r\n            if (this.currentPage !== newPage) {\r\n              this.currentPage = newPage;\r\n              this.fetchNotices();\r\n            }\r\n          }\r\n          \r\n          if (response.data.data.noticePhotos && response.data.data.noticePhotos.length > 0) {\r\n            this.images = response.data.data.noticePhotos.map(photoUrl => ({\r\n              src: photoUrl\r\n            }));\r\n          } else {\r\n            this.images = [];\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"공지사항 상세 정보를 불러오기 실패:\", error);\r\n      }\r\n    },\r\n    handleImageError(index) {\r\n      this.images[index].src = require('@/assets/rigth.png');\r\n    },\r\n    async fetchAndGoToNotice(index) {\r\n        try {\r\n            const allNoticesResponse = await axios.get(\r\n                `${store.state.apiBaseUrl}/notices?page=0&size=${this.totalNotices || 999}`,\r\n                { headers: { Authorization: `Bearer ${store.state.accessToken}` } }\r\n            );\r\n            const allNotices = allNoticesResponse.data.data.content;\r\n            if (allNotices && allNotices[index]) {\r\n                this.goToNotice(allNotices[index].noticeUUID);\r\n            }\r\n        } catch(error) {\r\n            console.error(\"이전/다음 공지사항 로드 실패\", error);\r\n        }\r\n    },\r\n    prevNotice() {\r\n      const prevIndex = (this.currentNoticeIndex - 1 + this.totalNotices) % this.totalNotices;\r\n      this.fetchAndGoToNotice(prevIndex);\r\n    },\r\n    nextNotice() {\r\n      const nextIndex = (this.currentNoticeIndex + 1) % this.totalNotices;\r\n      this.fetchAndGoToNotice(nextIndex);\r\n    },\r\n    async changePage(page) {\r\n      if (page >= 1 && page <= this.totalPages) {\r\n        this.currentPage = page;\r\n        await this.fetchNotices();\r\n      }\r\n    },\r\n    goToNotice(noticeUUID) {\r\n      this.$router.push({ name: 'NoticeClick', params: { noticeUUID } });\r\n    },\r\n    formattedDate(dateString) {\r\n      return new Date(dateString).toLocaleDateString('ko-KR');\r\n    },\r\n  },\r\n  watch: {\r\n    $route(to) {\r\n      this.fetchNotice(to.params.noticeUUID);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* --- 공통 및 데스크톱 스타일 --- */\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* 수정 후 CSS */\r\n.container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px 15% 0% 20px; /* 좌우 패딩을 %로 설정 */\r\n    margin: 20px auto 40px; /* 마진을 auto로 설정해 중앙 정렬 */\r\n    max-width: 817px; /* 컨텐츠 최대 너비 설정 */\r\n    width: 100%;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  max-width: 800px; /* 상세/목록 너비와 맞춤 */\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.nav-button {\r\n  background: none;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  padding: 8px 12px;\r\n  color: #555;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  display: flex;\r\n  align-items: center;\r\n  transition: background-color 0.2s;\r\n}\r\n.nav-button:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.nav-icon {\r\n  width: 12px;\r\n  height: 12px;\r\n  margin: 0 5px;\r\n}\r\n\r\n/* --- 공지사항 상세 --- */\r\n.notice-details {\r\n  width: 100%;\r\n  max-width: 817px;\r\n  min-height: 400px; /* 최소 높이 조정 */\r\n  padding: 30px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n  margin-bottom: 30px;\r\n  border: 1px solid #eee;\r\n}\r\n\r\n.meta-info {\r\n  border-bottom: 1px solid #eee;\r\n  padding-bottom: 15px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.notice-title {\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  margin-bottom: 12px;\r\n  line-height: 1.4;\r\n  color: #333;\r\n}\r\n\r\n.meta-line {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.notice-meta {\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.notice-date {\r\n  font-size: 14px;\r\n  color: #888;\r\n}\r\n\r\n.notice-content {\r\n  font-size: 16px;\r\n  line-height: 1.7;\r\n  color: #444;\r\n  word-wrap: break-word;\r\n  white-space: pre-wrap; /* v-html과 함께 사용 시 줄바꿈 유지 */\r\n}\r\n\r\n.notice-images {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 15px;\r\n  margin-top: 30px;\r\n}\r\n\r\n.image-container {\r\n  width: 100%;\r\n  max-width: 500px; /* 이미지 최대 너비 */\r\n}\r\n\r\n.notice-image {\r\n  width: 100%;\r\n  height: auto; /* 이미지 비율 유지 */\r\n  border-radius: 8px;\r\n  object-fit: cover;\r\n}\r\n\r\n\r\n/* --- 공지사항 목록 --- */\r\n.notice-list {\r\n  width: 100%;\r\n  max-width: 817px;\r\n  background-color: white;\r\n  padding: 10px 20px 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n  border: 1px solid #eee;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  table-layout: fixed;\r\n}\r\ntable tr {\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\ntable tr:hover {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.title-col { width: 60%; }\r\n.author-col { width: 20%; }\r\n.date-col { width: 20%; }\r\n\r\ntd {\r\n  padding: 15px 10px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  vertical-align: middle;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  text-align: center;\r\n  font-size: 15px;\r\n}\r\n\r\ntd.title-col {\r\n  text-align: left;\r\n  white-space: nowrap;\r\n}\r\n\r\ntr.current-notice td {\r\n  background-color: #FFFBEF;\r\n  font-weight: bold;\r\n  color: #D97706;\r\n}\r\n\r\n/* --- 페이지네이션 --- */\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.pagination-number {\r\n  font-size: 14px;\r\n  color: #555;\r\n  cursor: pointer;\r\n  padding: 5px 10px;\r\n  border-radius: 4px;\r\n}\r\n.pagination-number:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n.pagination-number.active {\r\n  font-weight: bold;\r\n  color: #FFB052;\r\n  background-color: #FFFBEF;\r\n}\r\n\r\n.pagination-button {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n.pagination-button:disabled {\r\n  opacity: 0.4;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.pagination-icon {\r\n  width: 12px;\r\n  height: 12px;\r\n}\r\n\r\n/* 모바일 카드 뷰 (기본 숨김) */\r\n.notice-cards {\r\n  display: none;\r\n}\r\n\r\n\r\n/* --- 반응형 디자인: 화면 너비 768px 이하 --- */\r\n@media (max-width: 768px) {\r\n  .notice-details {\r\n    padding: 20px;\r\n    min-height: auto;\r\n  }\r\n\r\n  .notice-title {\r\n    font-size: 20px;\r\n  }\r\n  .meta-line {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 4px;\r\n  }\r\n\r\n  /* 목록: 테이블 숨기고 카드 보이기 */\r\n  table {\r\n    display: none;\r\n  }\r\n  .notice-cards {\r\n    display: block;\r\n  }\r\n\r\n  .notice-card {\r\n    padding: 15px 10px;\r\n    border-bottom: 1px solid #f0f0f0;\r\n    cursor: pointer;\r\n  }\r\n  .notice-card:last-child {\r\n    border-bottom: none;\r\n  }\r\n  .notice-card.current-notice {\r\n    background-color: #FFFBEF;\r\n    border-radius: 4px;\r\n  }\r\n  .card-title {\r\n    font-size: 15px;\r\n    font-weight: 500;\r\n    margin-bottom: 8px;\r\n    color: #333;\r\n  }\r\n  .card-meta {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 13px;\r\n    color: #777;\r\n  }\r\n  .notice-card.current-notice .card-title,\r\n  .notice-card.current-notice .card-meta {\r\n    color: #D97706;\r\n  }\r\n  \r\n  .pagination-number {\r\n    padding: 4px 8px;\r\n  }\r\n}\r\n</style>","import { render } from \"./NoticeClick.vue?vue&type=template&id=57f2037b&scoped=true\"\nimport script from \"./NoticeClick.vue?vue&type=script&lang=js\"\nexport * from \"./NoticeClick.vue?vue&type=script&lang=js\"\n\nimport \"./NoticeClick.vue?vue&type=style&index=0&id=57f2037b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-57f2037b\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","prevNotice","src","_imports_0","alt","nextNotice","_imports_1","$data","notice","_createElementBlock","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","noticeTitle","_hoisted_6","_hoisted_7","adminName","_hoisted_8","formattedDate","noticeCreatedAt","innerHTML","convertNewlinesToBr","noticeContent","images","length","_hoisted_10","_Fragment","_renderList","image","index","key","onError","$event","handleImageError","_hoisted_12","notices","n","noticeUUID","goToNotice","_normalizeClass","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","changePage","currentPage","disabled","totalPages","page","active","_hoisted_25","show401Popup","_createBlock","_component_Popup401","components","Popup401","data","itemsPerPage","totalNotices","currentNoticeIndex","created","this","fetchNotices","fetchNotice","$route","params","mounted","initializePage","methods","isFirstVisit","localStorage","getItem","reloaded","sessionStorage","setItem","window","location","reload","removeItem","handle401Error","error","response","status","text","replace","accessToken","store","state","Math","max","size","axios","get","apiBaseUrl","headers","Authorization","content","totalElements","allNoticesResponse","allNotices","findIndex","newPage","floor","noticePhotos","map","photoUrl","console","require","fetchAndGoToNotice","prevIndex","nextIndex","$router","push","name","dateString","Date","toLocaleDateString","watch","to","__exports__","render"],"sourceRoot":""}