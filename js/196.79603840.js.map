{"version":3,"file":"js/196.79603840.js","mappings":"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","sources":["webpack://donggurami/./src/components/departments.js","webpack://donggurami/./src/components/ClubLeader/Accept/Accept.vue","webpack://donggurami/./src/components/ClubLeader/Accept/Popup.vue","webpack://donggurami/./src/components/ClubLeader/Accept/Popup.vue?95d1","webpack://donggurami/./src/components/ClubLeader/Accept/Accept.vue?4677"],"sourcesContent":["export const colleges = [\r\n    { id: 'humanities', name: '인문사회융합대학' },\r\n    { id: 'business', name: '경영공학대학' },\r\n    { id: 'innovation', name: '혁신공과대학' },\r\n    { id: 'sw', name: '지능형SW융합대학' },\r\n    { id: 'lifecare', name: '라이프케어사이언스대학' },\r\n    { id: 'design', name: '디자인앤아트대학' },\r\n    { id: 'music', name: '음악테크놀로지대학' },\r\n    { id: 'culture', name: '문화예술융합대학' },\r\n    { id: 'global', name: '글로벌인재대학' },\r\n];\r\n\r\nexport const departmentsByCollege = {\r\n    humanities: [\r\n        '인문사회융합대학', '인문학부', '국어국문학과', '사학과',\r\n        '외국어학부', '영어영문학과', '프랑스어문학과', '러시아어문학과', '일어일문학과', '중어중문학과',\r\n        '법행정학부', '법학과', '행정학과', '미디어커뮤니케이션학과', '행정학과', '소방행정학과'\r\n    ],\r\n    business: [\r\n        '경영학부', '경영학과', '글로벌비즈니스학과', '회계학과',\r\n        '경제학부', '경제금융학과', '국제개발협력학과',\r\n        '호텔관광학부', '호텔경영학과', '외식경영학과', '관광경영학과'\r\n    ],\r\n    innovation: [\r\n        '바이오화학산업학부', '바이오공학및마케팅학과', '융합화학산업학과',\r\n        '건설환경에너지공학부', '건설환경공학과', '환경에너지공학과',\r\n        '건축도시부동산학부', '건축학과', '도시부동산학과',\r\n        '산업및기계공학부', '산업공학과', '기계공학과', '반도체공학과',\r\n        '전기전자공학부', '전기공학과', '전자공학과',\r\n        '화학공학신소재공학부', '신소재공학과', '화학공학과'\r\n    ],\r\n    sw: [\r\n        '컴퓨터학부', '컴퓨터SW학과', '미디어SW학과',\r\n        '정보통신학부', '정보통신학과', '정보보호학과',\r\n        '데이터과학부'\r\n    ],\r\n    lifecare: [\r\n        '간호학과', '아동가족복지학과', '의류학과', '식품영양학과',\r\n        '스포츠과학부', '체육학과', '레저스포츠학과', '운동건강관리학과'\r\n    ],\r\n    design: [\r\n        '조형예술학부', '회화과', '조소과',\r\n        '디자인학부', '커뮤니케이션디자인과', '패션디자인과', '공예디자인과'\r\n    ],\r\n    music: [\r\n        '아트앤테크놀로지작곡과', '성악과', '피아노과', '관현악과', '국악과'\r\n    ],\r\n    culture: [\r\n        '아트앤엔터테인먼트학부', '영화술과', '연기예술과', '디지털콘텐츠과'\r\n    ],\r\n    global: [\r\n        '자유전공학부'\r\n    ]\r\n};","<template>\r\n  <div>\r\n    <div class=\"sections-container\">\r\n      <!-- Left Section: Member Requests -->\r\n      <div class=\"section member-requests\">\r\n        <h2>비회원 가입 요청 목록</h2>\r\n        <p class=\"request-count\">요청 인원: {{ requestedMembers.length }}명</p>\r\n        <p class=\"instruction\">각각의 목록에서 올바른 회원을 선택해주세요.</p>\r\n\r\n        <div class=\"request-list\">\r\n          <div class=\"request-item-container\" v-for=\"(member, index) in requestedMembers\" :key=\"member.studentId\">\r\n            <div class=\"request-item\" :class=\"{ selected: selectedRequestedMembers.includes(index), rejected: member.rejected }\" @click=\"toggleRequestedMember(index)\">\r\n              <div class=\"member-info\">\r\n                <span class=\"name1\">{{ member.name }}</span>\r\n                <span class=\"student-id\">{{ member.studentId }}</span>\r\n                <span class=\"department\">{{ member.department }}</span>\r\n                <span class=\"phone1\">{{ member.phone }}</span>\r\n              </div>\r\n            </div>\r\n            <button class=\"action-button reject-button\" @click.stop=\"rejectMember(index)\">거절</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!--      <div class=\"vertical-line\"></div> 구분선 삭제함-->\r\n\r\n      <!-- Right Section: Added Members -->\r\n      <div class=\"section added-members\">\r\n        <h2>비회원 정보</h2>\r\n        <p class=\"member-count\">비회원: {{ addedMembers.length }} 명</p>\r\n\r\n        <div class=\"added-member-list\">\r\n          <div class=\"added-member-container\" v-for=\"(member, index) in addedMembers\" :key=\"index\">\r\n            <!-- Normal view mode -->\r\n            <div v-if=\"editingIndex !== index\" class=\"member-item-wrapper\">\r\n              <div class=\"member-row\">\r\n                <div class=\"added-member-item\" :class=\"{ selected: selectedAddedMembers.includes(index) }\" @click=\"toggleAddedMember(index)\">\r\n                  <div class=\"member-info\">\r\n                    <span class=\"name1\">{{ member.name }}</span>\r\n                    <span class=\"student-id\">{{ member.studentId }}</span>\r\n                    <span class=\"department\">{{ member.department }}</span>\r\n                    <span class=\"phone1\">{{ member.phone }}</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"action-buttons\">\r\n                  <button class=\"action-button edit-button\" @click.stop=\"editMember(index)\">수정</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Edit mode -->\r\n            <div v-else class=\"member-item-wrapper\">\r\n              <div class=\"member-row\">\r\n                <div class=\"edit-form\">\r\n                  <div class=\"edit-inputs\">\r\n                    <input v-model=\"editingMember.name\" class=\"edit-input name-input\" placeholder=\"이름\"/>\r\n                    <input v-model=\"editingMember.studentId\" class=\"edit-input id-input\" placeholder=\"학번\"/>\r\n                    <select v-model=\"editingMember.college\" class=\"edit-input college-select\" @change=\"onCollegeChange\">\r\n                      <option value=\"\">단과대학 선택</option>\r\n                      <option v-for=\"college in colleges\" :key=\"college.id\" :value=\"college.name\">\r\n                        {{ college.name }}\r\n                      </option>\r\n                    </select>\r\n                    <select v-model=\"editingMember.department\" class=\"edit-input department-select\">\r\n                      <option value=\"\">학과 선택</option>\r\n                      <option v-for=\"dept in availableDepartments\" :key=\"dept\" :value=\"dept\">\r\n                        {{ dept }}\r\n                      </option>\r\n                    </select>\r\n                    <input v-model=\"editingMember.phone\" class=\"edit-input phone-input\" placeholder=\"전화번호\"/>\r\n                  </div>\r\n                </div>\r\n                <div class=\"action-buttons\">\r\n                  <button class=\"action-button save-button\" @click=\"saveEdit(index)\">저장</button>\r\n                </div>\r\n              </div>\r\n              <!-- Error messages section -->\r\n              <div v-if=\"errorMessagesByIndex[index] && errorMessagesByIndex[index].length > 0\" class=\"error-messages\">\r\n                <p v-for=\"(error, errorIndex) in errorMessagesByIndex[index]\" :key=\"errorIndex\" class=\"error-message\">\r\n                  {{ error }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Accept Button Section -->\r\n        <div class=\"accept-section\">\r\n          <button class=\"accept-button\" :class=\"{ active: selectedRequestedMembers.length > 0 && selectedAddedMembers.length > 0 }\"\r\n                  :disabled=\"selectedRequestedMembers.length === 0 || selectedAddedMembers.length === 0\"\r\n                  @click=\"selectedRequestedMembers.length > 0 && selectedAddedMembers.length > 0 ? showAcceptPopup = true : null\">\r\n            수락\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <!-- Popups -->\r\n    <Popup v-if=\"showEditPopup\" :visible=\"showEditPopup\" title=\"동아리 회원 수정\"\r\n           message=\"해당 동아리 회원을 수정하시겠습니까?\"\r\n           @cancel=\"cancelEditPopup\" @confirm=\"confirmEditPopup\"/>\r\n\r\n    <Popup v-if=\"showAcceptPopup\"\r\n           :visible=\"showAcceptPopup\"\r\n           title=\"동아리 회원 가입 요청\"\r\n           message=\"해당 동아리 회원의 가입 요청을 수락하시겠습니까?\"\r\n           sub-message=\"다시 되돌릴 수 없으니 신중하게 선택해주세요.\"\r\n           @cancel=\"cancelAccept\"\r\n           @confirm=\"confirmAccept\"/>\r\n\r\n    <Popup v-if=\"showRejectionPopup\" :visible=\"showRejectionPopup\" title=\"동아리 회원 가입 요청\"\r\n           message=\"해당 동아리 회원 가입 요청을 거절하시겠습니까?\" subMessage=\"다시 되돌릴 수 없으니 신중하게 선택해주세요.\"\r\n           @cancel=\"cancelRejection\" @confirm=\"confirmRejection\"/>\r\n\r\n    <Popup v-if=\"showConfirmationPopup\"\r\n           :visible=\"showConfirmationPopup\"\r\n           title=\"동아리 회원 가입 요청\"\r\n           message=\"회원 가입 요청이 정상적으로 처리되었습니다.\"\r\n           :hideCancelButton=\"true\"\r\n           @confirm=\"closeConfirmationPopup\"/>\r\n\r\n    <Popup v-if=\"showErrorPopup\"\r\n           :visible=\"showErrorPopup\"\r\n           title=\"동아리 회원 가입 요청\"\r\n           :message=\"`해당 동아리 회원의 정보가 일치하지 않습니다.`\"\r\n           :subMessage=\"`${errorData}`\"\r\n           :message2=\"`을(를) 다시 확인해주세요.`\"\r\n           :hideCancelButton=\"true\"\r\n           @confirm=\"closeErrorPopup\"/>\r\n\r\n    <Popup v-if=\"show404ErrorPopup\"\r\n           :visible=\"show404ErrorPopup\"\r\n           title=\"동아리 회원 가입 요청\"\r\n           message=\"해당 동아리 회원은 존재하지 않습니다. 다시 한 번 확인해주세요.\"\r\n           :hideCancelButton=\"true\"\r\n           @confirm=\"close404ErrorPopup\"/>\r\n\r\n    <Popup v-if=\"realCompletePopup\"\r\n           :visible=\"realCompletePopup\"\r\n           title=\"동아리 회원 가입 요청\"\r\n           :message=\"`회원 가입 요청이 정상적으로 처리되었습니다.`\"\r\n           :message2=\"`${completedMemberName} 동아리 회원에게 회원 가입 완료 소식을 전달해주세요.`\"\r\n           :hideCancelButton=\"true\"\r\n           @confirm=\"closerealCompletePopup\"/>\r\n\r\n    <Popup401 v-if=\"show401Popup\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { colleges, departmentsByCollege } from '../../departments'; // 학과 정보 가져오기\r\nimport Popup from './Popup.vue';\r\nimport axios from 'axios';\r\nimport store from '../../../store/store';\r\nimport Popup401 from '../401Popup.vue'; // 401 팝업 컴포넌트 추가\r\n\r\nexport default {\r\n  components: {\r\n    Popup,\r\n    Popup401,\r\n  },\r\n  data() {\r\n    return {\r\n      addedMembers: [], // 엑셀로 추가된 비회원 목록\r\n      requestedMembers: [], // 가입 요청 목록\r\n      showEditPopup: false, // 팝업 표시 상태\r\n      editingIndex: -1,\r\n      editingMember: null,\r\n      tempEditingMember: null, // 임시 저장용 객체 추가함\r\n      colleges: colleges, // 전체 단과대학 정보\r\n      selectedRequestedMembers: [],\r\n      showAcceptPopup: false,\r\n      showConfirmationPopup: false,\r\n      showErrorPopup: false,\r\n      show404ErrorPopup: false,\r\n      showRejectionPopup: false,\r\n      realCompletePopup: false,\r\n      membersToReject: [],\r\n      errorMessages: [], // 에러 메시지 배열\r\n      selectedAddedMembers: [], // 선택된 회원 관리\r\n      errorMessagesByIndex: {},\r\n\r\n      errorData: '', // 400 에러시 additionalData 저장\r\n      completedMemberName: '', // 회원가입 완료된 회원 이름 저장\r\n\r\n      show401Popup: false,\r\n    };\r\n  },\r\n  computed: {\r\n    availableDepartments() {\r\n      if (!this.editingMember?.college) return [];\r\n      const collegeId = this.colleges.find(c => c.name === this.editingMember.college)?.id;\r\n      return collegeId ? departmentsByCollege[collegeId] : [];\r\n    }\r\n  },\r\n  async created() {\r\n    await this.fetchData();\r\n  },\r\n  methods: {\r\n    // 401 에러 처리를 위한 공통 함수\r\n    handle401Error(error) {\r\n      if (error.response && error.response.status === 401) {\r\n        this.show401Popup = true;\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    async fetchData() {\r\n      console.log(\"🔍 Vuex 상태 확인:\", store.state);\r\n    console.log(\"🔍 Access Token:\", store.state.accessToken);\r\n    console.log(\"🔍 clubUUID:\", store.state.clubUUID);\r\n    console.log(\"🔍 clubMemberUUID:\", store.state.clubMemberUUID);\r\n    console.log(\"🔍 clubMemberAccountStatusUUID:\", store.state.clubMemberAccountStatusUUID);\r\n\r\n    const accessToken = store.state.accessToken;\r\n    const clubMemberUUID = store.state.clubMemberUUID; //주석 해제 후 값 가져오기\r\n    const clubMemberAccountStatusUUID = store.state.clubMemberAccountStatusUUID;\r\n    const clubUUID = store.state.clubUUID;\r\n    try {\r\n        // Vuex 상태값 확인\r\n        if (!accessToken || !clubUUID) {\r\n            console.error('Access token or clubMemberAccountStatusUUID is missing');\r\n            alert('로그인이 필요합니다.');\r\n            return;\r\n        }\r\n\r\n        // 가입 요청 목록 조회\r\n        const requestResponse = await axios.get(`${store.state.apiBaseUrl}/club-leader/${clubUUID}/members/sign-up`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${accessToken}`,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        console.log('Request Response:', requestResponse.data);\r\n\r\n        if (!requestResponse.data || !requestResponse.data.data) {\r\n            throw new Error('가입 요청 목록 응답이 올바르지 않습니다.');\r\n        }\r\n\r\n        this.requestedMembers = requestResponse.data.data.map(member => ({\r\n          clubMemberAccountStatusUUID: member.clubMemberAccountStatusUUID,\r\n            name: member.profileTempName,\r\n            studentId: member.profileTempStudentNumber,\r\n            department: member.profileTempMajor,\r\n            phone: member.profileTempHp,\r\n            rejected: false\r\n        }));\r\n\r\n        // clubMemberUUID가 존재하는지 확인\r\n        if (!clubUUID) {\r\n            console.warn('clubMemberUUID가 존재하지 않습니다. 비회원 목록을 불러오지 않습니다.');\r\n            return;\r\n        }\r\n\r\n        // 엑셀로 추가된 비회원 목록 조회\r\n        const membersResponse = await axios.get(`${store.state.apiBaseUrl}/club-leader/${clubUUID}/members?sort=non-member`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${accessToken}`,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        console.log('Members Response:', membersResponse.data);\r\n\r\n        if (!membersResponse.data || !membersResponse.data.data) {\r\n            throw new Error('비회원 목록 응답이 올바르지 않습니다.');\r\n        }\r\n\r\n        this.addedMembers = membersResponse.data.data.map(member => ({\r\n          clubMemberUUID: member.clubMemberUUID,\r\n            name: member.userName,\r\n            studentId: member.studentNumber,\r\n            department: member.major,\r\n            phone: member.userHp,\r\n            college: this.findCollegeByDepartment(member.major),\r\n        }));\r\n\r\n    } catch (error) {\r\n        if (!this.handle401Error(error)) {\r\n            console.error('동아리 정보를 불러오는데 실패했습니다.', error);\r\n            alert('동아리 정보를 불러오는데 실패했습니다.');\r\n        }\r\n    }\r\n},\r\n    findCollegeByDepartment(department) {\r\n      for (const college of colleges) {\r\n        if (departmentsByCollege[college.id].includes(department)) {\r\n          return college.name;\r\n        }\r\n      }\r\n      return '';\r\n    },\r\n    \r\n    async updateMemberInfo(memberId, memberData) {\r\n      const accessToken = store.state.accessToken;\r\n      const clubUUID = store.state.clubUUID;\r\n     // const memberId = this.requestedMembers[index].clubMemberUUID;\r\n\r\n      try {\r\n        const response = await axios.patch(\r\n            `${store.state.apiBaseUrl}/club-leader/${clubUUID}/members/${memberId}/non-member`,\r\n            {\r\n              userName: memberData.name,\r\n              studentNumber: memberData.studentId,\r\n              userHp: memberData.phone.replace(/\\D/g, ''), // Ensure phone number is sent as 11-digit number\r\n              major: memberData.department\r\n            },\r\n            {\r\n              headers: {\r\n                'Authorization': `Bearer ${accessToken}`,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            }\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          return true;\r\n        }\r\n        return false;\r\n      } catch (error) {\r\n        if (!this.handle401Error(error)) {\r\n          console.error('동아리 정보를 불러오는데 실패했습니다.', error);\r\n          alert('동아리 정보를 불러오는데 실패했습니다.');\r\n        }\r\n      }\r\n    },\r\n\r\n    async confirmEditPopup() {\r\n      if (!this.tempEditingMember) {\r\n        console.error('No editing member data available');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const memberId = this.addedMembers[this.editingIndex].clubMemberUUID;\r\n\r\n        // Clean phone number before sending\r\n        const cleanedPhone = this.tempEditingMember.phone.replace(/\\D/g, '');\r\n\r\n        const success = await this.updateMemberInfo(memberId, {\r\n          ...this.tempEditingMember,\r\n          phone: cleanedPhone // Send cleaned phone number to server\r\n        });\r\n\r\n        if (success) {\r\n          // Store the cleaned phone number in local state\r\n          this.addedMembers[this.editingIndex] = {\r\n            ...this.tempEditingMember,\r\n            phone: cleanedPhone\r\n          };\r\n          this.resetEditing();\r\n          this.showEditPopup = false;\r\n          this.$emit('show-toast', '회원 정보가 성공적으로 수정되었습니다.');\r\n        }\r\n      } catch (error) {\r\n        this.errorMessagesByIndex[this.editingIndex] = [\"회원 정보 수정 중 오류가 발생했습니다. 다시 시도해주세요.\"];\r\n        console.error('Error updating member:', error);\r\n      }\r\n    },\r\n\r\n    onCollegeChange() {\r\n      // 단과대학이 변경되면 학과 선택을 초기화\r\n      if (this.editingMember) {\r\n        this.editingMember.department = '';\r\n      }\r\n    },\r\n    saveData() {\r\n      localStorage.setItem(\"requestedMembers\", JSON.stringify(this.requestedMembers));\r\n      localStorage.setItem(\"addedMembers\", JSON.stringify(this.addedMembers));\r\n    },\r\n    toggleRequestedMember(index) {\r\n      if (this.selectedRequestedMembers.includes(index)) {\r\n        this.selectedRequestedMembers = [];\r\n      } else {\r\n        this.selectedRequestedMembers = [index];\r\n      }\r\n    },\r\n    toggleAddedMember(index) {\r\n      const selectedIndex = this.selectedAddedMembers.indexOf(index);\r\n      if (selectedIndex > -1) {\r\n        this.selectedAddedMembers.splice(selectedIndex, 1);\r\n      } else {\r\n        this.selectedAddedMembers = [index];\r\n      }\r\n    },\r\n    rejectMember(index) {\r\n      this.requestedMembers[index].rejected = true;\r\n      this.membersToReject = [index];\r\n      this.showRejectionPopup = true;\r\n      this.saveData();\r\n    },\r\n    cancelRejection() {\r\n      this.membersToReject.forEach((index) => {\r\n        this.requestedMembers[index].rejected = false;\r\n      });\r\n      this.membersToReject = [];\r\n      this.showRejectionPopup = false;\r\n      this.saveData();\r\n    },\r\n    async confirmRejection() {\r\n      const accessToken = store.state.accessToken;\r\n      const clubUUID = store.state.clubUUID;\r\n\r\n      try {\r\n        for (const index of this.membersToReject) {\r\n          const memberId = this.requestedMembers[index].clubMemberAccountStatusUUID;\r\n\r\n          await axios.delete(`${store.state.apiBaseUrl}/club-leader/${clubUUID}/members/sign-up/${memberId}`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${accessToken}`,\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n\r\n          this.requestedMembers.splice(index, 1);\r\n        }\r\n        this.membersToReject = [];\r\n        this.showRejectionPopup = false;\r\n        this.saveData();\r\n      } catch (error) {\r\n        if (!this.handle401Error(error)) {\r\n          console.error('동아리 정보를 불러오는데 실패했습니다.', error);\r\n          alert('동아리 정보를 불러오는데 실패했습니다.');\r\n        }\r\n      }\r\n    },\r\n\r\n    cancelAccept() {\r\n      this.showAcceptPopup = false;\r\n    },\r\n\r\n    async confirmAccept() {\r\n      const accessToken = store.state.accessToken;\r\n      const clubUUID = store.state.clubUUID;\r\n\r\n      if (!clubUUID) {\r\n        console.error(\"clubUUID가 없습니다.\");\r\n        alert(\"클럽 정보가 올바르지 않습니다. 다시 로그인하거나 새로고침해 주세요.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        //선택한 회원의 uuid 값 가져오기 (갱신)\r\n        const requestedIndex = this.selectedRequestedMembers[0];\r\n        const addedIndex = this.selectedAddedMembers[0];\r\n\r\n        const requestedMember = { ...this.requestedMembers[requestedIndex] };\r\n        const addedMember = { ...this.addedMembers[addedIndex] };\r\n\r\n        console.log(\"선택한 회원 정보 업데이트 확인:\", requestedMember, addedMember);\r\n\r\n        const requestBody = {\r\n          signUpProfileRequest: {\r\n            uuid: requestedMember.clubMemberAccountStatusUUID,\r\n            userName: requestedMember.name,\r\n            studentNumber: requestedMember.studentId,\r\n            major: requestedMember.department,\r\n            userHp: requestedMember.phone.replace(/-/g, '')\r\n          },\r\n          clubNonMemberProfileRequest: {\r\n            uuid: addedMember.clubMemberUUID,\r\n            userName: addedMember.name,\r\n            studentNumber: addedMember.studentId,\r\n            major: addedMember.department,\r\n            userHp: addedMember.phone.replace(/-/g, '')\r\n          }\r\n        };\r\n\r\n        console.log(\"API 요청 바디:\", JSON.stringify(requestBody, null, 2));\r\n\r\n        const response = await axios.post(\r\n            `${store.state.apiBaseUrl}/club-leader/${clubUUID}/members/sign-up`,\r\n            requestBody,\r\n            {\r\n              headers: {\r\n                'Authorization': `Bearer ${accessToken}`,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            }\r\n        );\r\n\r\n        console.log(\"가입 요청 성공:\", response.data);\r\n\r\n        if (response.data.message === \"기존 동아리 회원 가입 요청 수락 완료\") {\r\n          this.showConfirmationPopup = true;\r\n        } else if (response.data.message === \"기존 동아리 회원 가입 요청 수락 후 계정 생성 완료\") {\r\n          this.completedMemberName = response.data.data;\r\n          this.realCompletePopup = true;\r\n        }\r\n\r\n        // 선택한 회원 제거\r\n        this.requestedMembers.splice(requestedIndex, 1);\r\n        this.addedMembers.splice(addedIndex, 1);\r\n        this.selectedRequestedMembers = [];\r\n        this.selectedAddedMembers = [];\r\n\r\n      } catch (error) {\r\n        if (error.response) {\r\n          console.error(\"API 요청 실패:\", error.response.data);\r\n\r\n          if (error.response.status === 401) {\r\n            this.show401Popup = true;\r\n          } else if (error.response.status === 404) {\r\n            // 404 에러일 때 show404ErrorPopup 표시\r\n            this.show404ErrorPopup = true;\r\n          } else if (error.response.data.code === \"PFL-209\") {\r\n            // PFL-209 에러 코드일 때 showErrorPopup 표시하고 additionalData 설정\r\n            this.errorData = error.response.data.additionalData.join(', ');\r\n            this.showErrorPopup = true;\r\n          } else {\r\n            // 기타 에러의 경우 일반 에러 팝업 표시\r\n            this.errorData = '알 수 없는 오류가 발생했습니다.';\r\n            this.showErrorPopup = true;\r\n          }\r\n        } else {\r\n          this.errorData = '네트워크 오류가 발생했습니다.';\r\n          this.showErrorPopup = true;\r\n        }\r\n      }\r\n\r\n      this.showAcceptPopup = false;\r\n      this.saveData();\r\n    },\r\n\r\n    closeConfirmationPopup() {\r\n      this.resetPopups();\r\n      this.showConfirmationPopup = false;\r\n    },\r\n    closeErrorPopup() {\r\n      this.resetPopups();\r\n      this.showErrorPopup = false;\r\n      this.errorData = '';\r\n    },\r\n    close404ErrorPopup() {\r\n      this.resetPopups();\r\n      this.show404ErrorPopup = false;\r\n    },\r\n    closerealCompletePopup() {\r\n      this.resetPopups();\r\n      this.realCompletePopup = false;\r\n      this.completedMemberName = '';\r\n    },\r\n    resetPopups() {\r\n      this.showAcceptPopup = false;\r\n      this.showConfirmationPopup = false;\r\n      this.showErrorPopup = false;\r\n      this.show404ErrorPopup = false;\r\n      this.realCompletePopup = false;\r\n      this.errorData = '';\r\n      this.completedMemberName = '';\r\n    },\r\n    editMember(index) {\r\n      this.editingIndex = index;\r\n      this.editingMember = JSON.parse(JSON.stringify(this.addedMembers[index]));\r\n      this.tempEditingMember = JSON.parse(JSON.stringify(this.addedMembers[index]));\r\n      this.errorMessagesByIndex = {}; // Clear any existing error messages\r\n    },\r\n\r\n    saveEdit(index) {\r\n      if (this.validateInput()) {\r\n        this.tempEditingMember = { ...this.editingMember }; // 임시 저장\r\n        this.showEditPopup = true;\r\n      }\r\n    },\r\n\r\n    validateInput() {\r\n      this.errorMessagesByIndex[this.editingIndex] = [];\r\n      let isValid = true;\r\n\r\n      if (!this.editingMember.name || !/^[가-힣a-zA-Z]+$/.test(this.editingMember.name)) {\r\n        this.errorMessagesByIndex[this.editingIndex].push('* 이름(특수 기호 제외 문자)을 입력해주세요.');\r\n        isValid = false;\r\n      }\r\n      if (!this.editingMember.studentId || !/^\\d{8}$/.test(this.editingMember.studentId)) {\r\n        this.errorMessagesByIndex[this.editingIndex].push('* 학번(8자리 숫자)을 입력해주세요.');\r\n        isValid = false;\r\n      }\r\n      if (!this.editingMember.college) {\r\n        this.errorMessagesByIndex[this.editingIndex].push('* 단과대를 선택해주세요.');\r\n        isValid = false;\r\n      }\r\n      if (!this.editingMember.department) {\r\n        this.errorMessagesByIndex[this.editingIndex].push('* 학과를 선택해주세요.');\r\n        isValid = false;\r\n      }\r\n\r\n      // New phone validation logic\r\n      const cleanedPhone = this.editingMember.phone.replace(/\\D/g, '');\r\n      if (!cleanedPhone || cleanedPhone.length !== 11) {\r\n        this.errorMessagesByIndex[this.editingIndex].push('* 전화번호(11자리 숫자)를 입력해주세요.');\r\n        isValid = false;\r\n      } else {\r\n        // Store the cleaned phone number if it's valid\r\n        this.editingMember.phone = cleanedPhone;\r\n      }\r\n\r\n      return isValid;\r\n    },\r\n\r\n    cancelEditPopup() {\r\n      this.resetEditing();\r\n      this.showEditPopup = false;\r\n    },\r\n    resetEditing() {\r\n      this.editingIndex = -1;\r\n      this.editingMember = null;\r\n      this.tempEditingMember = null;\r\n      this.errorMessages = [];\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.added-member-item.edit-mode {\r\n  background: #fff;\r\n  border: 1px solid #FFB052;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  width: 100%;\r\n}\r\n\r\n.added-member-item.edit-mode .member-info {\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n}\r\n\r\n.edit-input{\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  flex: 1;\r\n  width: 90px;\r\n}\r\n\r\n.phone-input {\r\n  flex: 0.8; /* 전화번호 입력창 크기 */\r\n}\r\n\r\n/* 선택된 요청 멤버 (request-item) */\r\n.request-item.selected {\r\n  background-color: #FFB05266; /* 엑셀파일과 동일한 배경색 */\r\n  border: 1px solid #FFB052;\r\n  transition: background-color 0.3s ease, border-color 0.3s ease; /* 부드러운 전환 효과 */\r\n}\r\n\r\n/* 거절된 요청 멤버 */\r\n\r\n.rejected .request-item {\r\n  background-color: #D88181; /* 거절 상태 배경색 */\r\n  color: white; /* 텍스트 색상 */\r\n  transition: background-color 0.3s ease; /* 부드러운 전환 */\r\n}\r\n.added-members .added-member-item.selected {\r\n  background-color: #FFB05266; /* 엑셀파일과 동일한 배경색 */\r\n  border: 1px solid #FFB052;\r\n  transition: background-color 0.3s ease, border-color 0.3s ease;\r\n}\r\n\r\n\r\n/* 거절된 요청 멤버 */\r\n.request-item.rejected {\r\n  background-color:  #d45f5066; /* 빨간색 배경 */\r\n  color: black; /* 텍스트 색상 */\r\n  border: 1px solid #FFB052; /* 빨간 테두리 */\r\n  transition: background-color 0.3s ease, border-color 0.3s ease; /* 부드러운 전환 효과 */\r\n  pointer-events: none; /* 거절된 항목은 클릭 불가 */\r\n}\r\n\r\n.instruction {\r\n  color: #FF3535; /* 텍스트 색상 */\r\n  margin-bottom: 30px;\r\n  /* 목록과의 간격 추가 */\r\n}\r\n\r\n.member-count{\r\n  margin-bottom: 69px;\r\n\r\n}\r\n\r\n.sections-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 20px;\r\n  max-width: 1000px;\r\n  position: relative;\r\n  height: 100%;\r\n}\r\n\r\n.section {\r\n  flex: 0 0 calc(50% - 30px); /* 각 섹션이 동일한 너비를 가지도록 설정 */\r\n  position: relative;\r\n}\r\n\r\n.accept-section {\r\n  display: flex;\r\n  justify-content: right;\r\n  width: 100%;\r\n  min-width: 500px;\r\n  margin-top: 40px;\r\n}\r\n\r\n\r\n.member-requests,\r\n.added-members {\r\n  width: 100%;\r\n  min-width: 300px;\r\n}\r\n\r\n\r\n.added-members {\r\n  margin-top: -4px; /* Adjust this value to align with the left section */\r\n}\r\n\r\n.request-item-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n  width: 500px;\r\n}\r\n\r\n.added-member-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  width: 500px;\r\n}\r\n\r\n/* 회원 정보 아이템 공통 스타일 */\r\n.request-item,\r\n.added-member-item {\r\n  flex: 1;\r\n  background: #FFFFFF;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n  width: 450px;\r\n}\r\n\r\n\r\n.added-members .edit-section + .added-member-list {\r\n  margin-top: 20px; /* 수정 섹션과 회원 목록 간 간격 */\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .member-requests, .added-members {\r\n    width: 100%; /* 작은 화면에서 한 줄로 표시 */\r\n  }\r\n}\r\n\r\n.request-list{}\r\n.added-member-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width:auto;\r\n  max-width: 100%; /* 내용이 초과하지 않도록 설정 */\r\n\r\n}\r\n\r\n.request-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 12px;\r\n  background: #FFFFFF;\r\n  border-radius: 8px;\r\n  border: 1px solid #ddd;\r\n  width: 450px;\r\n}\r\n\r\n\r\n.request-item {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n  padding: 12px;\r\n  background: #FFFFFF;\r\n  border-radius: 8px;\r\n  width: 370px;\r\n}\r\n\r\n\r\n.member-info {\r\n  display: flex;\r\n  padding: 0px 9px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 15px;\r\n  font-size: 14px;\r\n  flex: 1;\r\n  text-align: center;\r\n}\r\n\r\n/* 수정 폼 스타일 */\r\n.edit-form {\r\n  flex: 1;\r\n  background: #FFFFFF;\r\n  border: 1px solid #FFB052;\r\n  border-radius: 8px;\r\n  padding: 7px;\r\n  width: 510px;\r\n}\r\n\r\n.edit-inputs {\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n}\r\n\r\n.edit-input {\r\n  padding: 2px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n/* 각 입력 필드별 너비 조정 */\r\n.name-input {\r\n  width: 40px !important;\r\n  max-width: 50px;\r\n  flex: 0 0 50px;\r\n}\r\n\r\n.id-input {\r\n  width: 60px !important;\r\n  max-width: 70px;\r\n  flex: 0 0 70px;\r\n}\r\n\r\n.college-select {\r\n  width: 150px !important;\r\n  min-width: 150px;\r\n  flex: 0 0 150px;\r\n}\r\n\r\n.department-select {\r\n  width: 150px !important;\r\n  min-width: 150px;\r\n  flex: 0 0 150px;\r\n}\r\n\r\n.phone-input {\r\n  width: 130px !important;\r\n  min-width: 130px;\r\n  flex: 0 0 130px;\r\n}\r\n\r\n/* 액션 버튼 스타일 */\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n  white-space: nowrap;\r\n}\r\n\r\n.action-button {\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  height: 39px;\r\n}\r\n\r\n.reject-button {\r\n  background: #e57373;\r\n  color: white;\r\n  border: none;\r\n  padding: 2px 5px;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  align-self: center;\r\n  Width: 50px;\r\n  Height: 39px;\r\n}\r\n\r\n.reject-button:hover {\r\n  background: #e34141;\r\n}\r\n\r\n/* 기본 상태 (회색 버튼) */\r\n.accept-button {\r\n  background: #9d9d9d; /* 회색 배경 */\r\n  color: white;\r\n  cursor: not-allowed; /* 클릭 불가 */\r\n  border: none;\r\n  padding: 10px;\r\n  border-radius: 3px;\r\n  font-size: 16px;\r\n  width: 175px;\r\n  height: 45px;\r\n  transition: background-color 0.3s ease;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.accept-button.active {\r\n  background: #FFB052; /* 주황 배경 */\r\n  cursor: pointer; /* 클릭 가능 */\r\n}\r\n\r\n.accept-button:disabled {\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 회원 가입 요청 목록 타이틀 스타일 */\r\n.member-requests h2,\r\n.added-members h2 {\r\n  font-family: Pretendard, sans-serif;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  line-height: 1.2;\r\n  text-align: left;\r\n  margin-bottom: 20px; /* Add space below the heading */\r\n}\r\n\r\n.request-count,\r\n.member-count {\r\n  font-size: 16px;\r\n  color: #333;\r\n  margin-top: 20px; /* Optional: Adds space above the count text */\r\n}\r\n\r\n/* 회원 정보 스타일 */\r\n.added-member-item {\r\n  flex: 1; /* 회원 정보가 버튼을 제외한 전체를 차지하도록 설정 */\r\n  padding: 12px;\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  border: 1px solid #ddd;\r\n  transition: all 0.3s ease;\r\n  cursor: pointer; /* 클릭 가능한 상태로 설정 */\r\n}\r\n\r\n.edit-button {\r\n  background: #FFB052; /* 주황색 배경 */\r\n  color: white;\r\n  border: none;\r\n  padding: 2px 5px; /* 동일한 패딩 */\r\n  border-radius: 8px; /* 동일한 테두리 반경 */\r\n  cursor: pointer;\r\n  font-size: 12px; /* 동일한 폰트 크기 */\r\n  align-self: center;\r\n  width: 50px; /* 동일한 너비 */\r\n  height: 39px; /* 동일한 높이 */\r\n}\r\n\r\n.edit-button:hover {\r\n  background: #e09b4d; /* 호버 시 색상 변경 */\r\n}\r\n\r\n.error-message {\r\n  color: #ff3535;\r\n  font-size: 11px;\r\n  margin-top: 5px;\r\n  line-height: 0.3;\r\n}\r\n\r\n.edit-input{\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  flex: 1;\r\n  min-width: 0;\r\n}\r\n\r\n.added-member-item.selected {\r\n  background-color: #FFB05266; /* 엑셀파일과 동일한 배경색 */\r\n  border: 1px solid #FFB052;\r\n  transition: background-color 0.3s ease, border-color 0.3s ease;\r\n}\r\n\r\n\r\n.edit-input{\r\n  flex: 1; /* 필드들이 동일한 너비로 확장 */\r\n  padding: 8px;\r\n  border: 1px solid #ccc; /* 테두리 설정 */\r\n  border-radius: 4px; /* 필드 모서리 둥글게 */\r\n}\r\n\r\n.save-button {\r\n  background: #FFB052; /* 주황색 배경 */\r\n  color: white;\r\n  border: none;\r\n  padding: 2px 5px; /* 동일한 패딩 */\r\n  border-radius: 8px; /* 동일한 테두리 반경 */\r\n  cursor: pointer;\r\n  font-size: 14px; /* 동일한 폰트 크기 */\r\n  align-self: center;\r\n  width: 54px; /* 동일한 너비 */\r\n  height: 47px; /* 동일한 높이 */\r\n}\r\n\r\n.save-button:hover {\r\n  background: #e09b4d; /* 호버 시 색상 변경 */\r\n}\r\n\r\n.member-item-wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  gap: 5px;\r\n}\r\n\r\n.member-row {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 10px;\r\n  width: 100%;\r\n}\r\n\r\n.error-messages {\r\n  margin-top: 5px;\r\n  margin-bottom: -15px;\r\n  width: 100%;\r\n}\r\n\r\n\r\n\r\n/* 메인 컨테이너: 좌우 섹션을 담는 최상위 컨테이너 */\r\n.sections-container {\r\n  display: flex; /* Flexbox 레이아웃 사용 */\r\n  justify-content: space-between; /* 좌우 섹션 사이 공간 균등 분배 */\r\n  gap: 15px; /* 섹션 사이 간격 */\r\n  max-width: 1200px; /* 최대 너비 제한 */\r\n  position: relative;\r\n  height: 100%;\r\n  padding-right: 20px;\r\n  margin-left: -50px;\r\n}\r\n\r\n/* 화면 너비가 1300px 미만일 때의 반응형 스타일 */\r\n@media (max-width: 1300px) {\r\n  /* 컨테이너를 세로 방향으로 변경 */\r\n  .sections-container {\r\n    flex-direction: column; /* 섹션들을 세로로 배치 */\r\n    align-items: center; /* 가운데 정렬 */\r\n    padding-right: 0; /* 패딩 제거 */\r\n    gap: 60px;\r\n  }\r\n\r\n  /* 각 섹션의 너비 조정 */\r\n  .section {\r\n    flex: 1 1 100%; /* flex-grow: 1, flex-shrink: 1, flex-basis: 100% */\r\n    width: 100%;\r\n    max-width: 500px; /* 섹션 최대 너비 제한 */\r\n  }\r\n\r\n  /* 좌우 섹션 공통 스타일 */\r\n  .member-requests,\r\n  .added-members {\r\n    width: 100%;\r\n    min-width: unset; /* 최소 너비 제한 해제 */\r\n  }\r\n\r\n  /* 회원 컨테이너 스타일 */\r\n  .request-item-container,\r\n  .added-member-container {\r\n    width: 100%; /* 컨테이너 전체 너비 사용 */\r\n  }\r\n\r\n  /* 회원 아이템 스타일 */\r\n  .request-item,\r\n  .added-member-item {\r\n    width: 100%; /* 아이템 전체 너비 사용 */\r\n  }\r\n\r\n  /* 편집 폼 스타일 */\r\n  .edit-form {\r\n    width: 100%;\r\n  }\r\n\r\n  /* 입력 필드 컨테이너 스타일 */\r\n  .edit-inputs {\r\n    flex-wrap: wrap; /* 입력 필드 줄바꿈 허용 */\r\n    gap: 8px; /* 필드 간 간격 */\r\n  }\r\n\r\n  /* 입력 필드 공통 스타일 */\r\n  .edit-input,\r\n  .college-select,\r\n  .department-select {\r\n    flex: 1 1 calc(50% - 4px); /* 2열 배치를 위한 너비 계산 */\r\n    min-width: unset;\r\n    width: auto !important;\r\n  }\r\n\r\n  /* 이름, 학번, 전화번호 입력 필드 스타일 */\r\n  .name-input,\r\n  .id-input,\r\n  .phone-input {\r\n    flex: 1 1 calc(33.333% - 6px); /* 3열 배치를 위한 너비 계산 */\r\n    min-width: unset;\r\n    width: auto !important;\r\n  }\r\n\r\n  /* 수락 버튼 섹션 스타일 */\r\n  .accept-section {\r\n    min-width: unset;\r\n    width: 100%;\r\n    justify-content: center; /* 버튼 중앙 정렬 */\r\n  }\r\n\r\n  /* member-count와 added-member-list 사이 간격 조정 */\r\n  .member-count {\r\n    margin-bottom: 30px; /* 반응형에서는 간격을 줄임 (기존 69px에서 변경) */\r\n  }\r\n}\r\n/* 추가적인 작은 화면 대응 미디어 쿼리 */\r\n@media (max-width: 768px) {\r\n  .sections-container {\r\n    padding: 0 15px; /* 모바일에서 패딩 감소 */\r\n    gap: 40px; /* 간격도 조금 줄임 */\r\n  }\r\n  \r\n  .request-item-container,\r\n  .added-member-container {\r\n    width: calc(100% - 10px); /* 여백을 위한 약간의 공간 확보 */\r\n  }\r\n}\r\n\r\n/* 매우 작은 화면 대응 */\r\n@media (max-width: 480px) {\r\n  .sections-container {\r\n    padding: 0 10px; /* 최소 패딩 */\r\n  }\r\n}/* 메인 컨테이너: 좌우 섹션을 담는 최상위 컨테이너 */\r\n.sections-container {\r\n  display: flex; /* Flexbox 레이아웃 사용 */\r\n  justify-content: space-between; /* 좌우 섹션 사이 공간 균등 분배 */\r\n  gap: 15px; /* 섹션 사이 간격 */\r\n  max-width: 1200px; /* 최대 너비 제한 */\r\n  position: relative;\r\n  height: 100%;\r\n  padding: 0 20px; /* 좌우 패딩으로 여백 확보 */\r\n  margin: 0 auto; /* 가운데 정렬 */\r\n  box-sizing: border-box; /* 패딩 포함 크기 계산 */\r\n}\r\n</style>\r\n","<!-- src/components/Popup.vue -->\r\n<template>\r\n  <div v-if=\"visible\" class=\"popup-overlay\">\r\n    <div class=\"popup\">\r\n      <h3 class=\"popup-title\">{{ title }}</h3>\r\n      <div class=\"popup-divider\"></div>\r\n      <p class=\"popup-message\" v-html=\"message\"></p>\r\n      <p v-if=\"subMessage\" class=\"popup-sub-message\" v-html=\"subMessage\"></p>\r\n      <p v-if=\"message2\" class=\"popup-message2\" v-html=\"message2\"></p>\r\n      <div class=\"popup-buttons\">\r\n        <button v-if=\"!hideCancelButton\" @click=\"onCancel\" class=\"cancel-button1\">취소</button>\r\n        <button @click=\"onConfirm\" class=\"confirm-button1\">확인</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    visible: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    title: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    message: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    subMessage: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    message2: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    hideCancelButton: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  methods: {\r\n    onCancel() {\r\n      this.$emit('cancel');\r\n    },\r\n    onConfirm() {\r\n      this.$emit('confirm');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.popup-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.popup {\r\n  position: relative;\r\n  width: 451px;\r\n  height: 152px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  padding: 10px 20px 24px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.popup-title {\r\n  color: #2F2F2F;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n}\r\n\r\n.popup-divider {\r\n  border-top: 1px solid #ddd;\r\n  margin: 10px 0;\r\n}\r\n\r\n.popup-message {\r\n  color: #2F2F2F;\r\n  font-size: 15px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: normal;\r\n}\r\n\r\n.popup-message2 {\r\n  color: #2F2F2F;\r\n  font-size: 15px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: normal;\r\n}\r\n\r\n.popup-sub-message {\r\n  color: #FF3535;\r\n  font-size: 15px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n\r\n.popup-buttons {\r\n  position: absolute;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n.cancel-button1,\r\n.confirm-button1 {\r\n  display: flex;\r\n  width: 80px;\r\n  height: 32px;\r\n  padding: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  border-radius: 8px;\r\n  border: none; /* Remove border */\r\n}\r\n\r\n.cancel-button1 {\r\n  background: #B9B9B9;\r\n  color: white;\r\n}\r\n\r\n.confirm-button1 {\r\n  background-color: #FFB052;\r\n  color: white;\r\n}\r\n\r\n.confirm-button1:hover {\r\n  background-color: #e09b4d;\r\n}\r\n\r\n.cancel-button1:hover {\r\n  background: #a0a0a0;\r\n}\r\n\r\n.popup-sub-message,\r\n.popup-message2 {\r\n  display: inline;\r\n}\r\n</style>","import { render } from \"./Popup.vue?vue&type=template&id=1c760e36&scoped=true\"\nimport script from \"./Popup.vue?vue&type=script&lang=js\"\nexport * from \"./Popup.vue?vue&type=script&lang=js\"\n\nimport \"./Popup.vue?vue&type=style&index=0&id=1c760e36&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1c760e36\"]])\n\nexport default __exports__","import { render } from \"./Accept.vue?vue&type=template&id=7694877e&scoped=true\"\nimport script from \"./Accept.vue?vue&type=script&lang=js\"\nexport * from \"./Accept.vue?vue&type=script&lang=js\"\n\nimport \"./Accept.vue?vue&type=style&index=0&id=7694877e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7694877e\"]])\n\nexport default __exports__"],"names":["colleges","id","name","departmentsByCollege","humanities","business","innovation","sw","lifecare","design","music","culture","global","class","_createElementBlock","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","requestedMembers","length","_hoisted_4","_Fragment","_renderList","member","index","key","studentId","_normalizeClass","selected","selectedRequestedMembers","includes","rejected","onClick","$event","$options","toggleRequestedMember","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","department","_hoisted_10","phone","_withModifiers","rejectMember","_hoisted_11","_hoisted_12","_hoisted_13","addedMembers","_hoisted_14","editingIndex","_hoisted_15","_hoisted_16","selectedAddedMembers","toggleAddedMember","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","editMember","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","editingMember","placeholder","college","onChange","_cache","args","onCollegeChange","value","_hoisted_29","availableDepartments","dept","_hoisted_30","_hoisted_31","saveEdit","_hoisted_32","errorMessagesByIndex","_hoisted_33","error","errorIndex","_hoisted_34","active","disabled","showAcceptPopup","_hoisted_35","showEditPopup","_createBlock","_component_Popup","visible","title","message","onCancel","cancelEditPopup","onConfirm","confirmEditPopup","cancelAccept","confirmAccept","showRejectionPopup","subMessage","cancelRejection","confirmRejection","showConfirmationPopup","hideCancelButton","closeConfirmationPopup","showErrorPopup","errorData","message2","closeErrorPopup","show404ErrorPopup","close404ErrorPopup","realCompletePopup","completedMemberName","closerealCompletePopup","show401Popup","_component_Popup401","$props","innerHTML","props","type","Boolean","default","String","required","methods","this","$emit","__exports__","components","Popup","Popup401","data","tempEditingMember","membersToReject","errorMessages","computed","collegeId","find","c","created","fetchData","handle401Error","response","status","console","log","store","state","accessToken","clubUUID","clubMemberUUID","clubMemberAccountStatusUUID","alert","requestResponse","axios","get","apiBaseUrl","headers","Error","map","profileTempName","profileTempStudentNumber","profileTempMajor","profileTempHp","warn","membersResponse","userName","studentNumber","major","userHp","findCollegeByDepartment","updateMemberInfo","memberId","memberData","patch","replace","cleanedPhone","success","resetEditing","saveData","localStorage","setItem","JSON","stringify","selectedIndex","indexOf","splice","forEach","delete","requestedIndex","addedIndex","requestedMember","addedMember","requestBody","signUpProfileRequest","uuid","clubNonMemberProfileRequest","post","code","additionalData","join","resetPopups","parse","validateInput","isValid","test","push","render"],"sourceRoot":""}